extends Node


func __square(x, n):
	var _t0 = Time.get_ticks_usec()
	for _n in n:
		nd.square(x, )
	var _t1 = Time.get_ticks_usec()
	return _t1 - _t0

func __sqrt(x, n):
	var _t0 = Time.get_ticks_usec()
	for _n in n:
		nd.sqrt(x, )
	var _t1 = Time.get_ticks_usec()
	return _t1 - _t0

func __abs(x, n):
	var _t0 = Time.get_ticks_usec()
	for _n in n:
		nd.abs(x, )
	var _t1 = Time.get_ticks_usec()
	return _t1 - _t0

func __sin(x, n):
	var _t0 = Time.get_ticks_usec()
	for _n in n:
		nd.sin(x, )
	var _t1 = Time.get_ticks_usec()
	return _t1 - _t0

func __cos(x, n):
	var _t0 = Time.get_ticks_usec()
	for _n in n:
		nd.cos(x, )
	var _t1 = Time.get_ticks_usec()
	return _t1 - _t0

func __tan(x, n):
	var _t0 = Time.get_ticks_usec()
	for _n in n:
		nd.tan(x, )
	var _t1 = Time.get_ticks_usec()
	return _t1 - _t0

func __asin(x, n):
	var _t0 = Time.get_ticks_usec()
	for _n in n:
		nd.asin(x, )
	var _t1 = Time.get_ticks_usec()
	return _t1 - _t0

func __acos(x, n):
	var _t0 = Time.get_ticks_usec()
	for _n in n:
		nd.acos(x, )
	var _t1 = Time.get_ticks_usec()
	return _t1 - _t0

func __atan(x, n):
	var _t0 = Time.get_ticks_usec()
	for _n in n:
		nd.atan(x, )
	var _t1 = Time.get_ticks_usec()
	return _t1 - _t0

func __sinh(x, n):
	var _t0 = Time.get_ticks_usec()
	for _n in n:
		nd.sinh(x, )
	var _t1 = Time.get_ticks_usec()
	return _t1 - _t0

func __cosh(x, n):
	var _t0 = Time.get_ticks_usec()
	for _n in n:
		nd.cosh(x, )
	var _t1 = Time.get_ticks_usec()
	return _t1 - _t0

func __tanh(x, n):
	var _t0 = Time.get_ticks_usec()
	for _n in n:
		nd.tanh(x, )
	var _t1 = Time.get_ticks_usec()
	return _t1 - _t0

func __asinh(x, n):
	var _t0 = Time.get_ticks_usec()
	for _n in n:
		nd.asinh(x, )
	var _t1 = Time.get_ticks_usec()
	return _t1 - _t0

func __acosh(x, n):
	var _t0 = Time.get_ticks_usec()
	for _n in n:
		nd.acosh(x, )
	var _t1 = Time.get_ticks_usec()
	return _t1 - _t0

func __atanh(x, n):
	var _t0 = Time.get_ticks_usec()
	for _n in n:
		nd.atanh(x, )
	var _t1 = Time.get_ticks_usec()
	return _t1 - _t0

func __add(x, y, n):
	var _t0 = Time.get_ticks_usec()
	for _n in n:
		nd.add(x, y, )
	var _t1 = Time.get_ticks_usec()
	return _t1 - _t0

func __subtract(x, y, n):
	var _t0 = Time.get_ticks_usec()
	for _n in n:
		nd.subtract(x, y, )
	var _t1 = Time.get_ticks_usec()
	return _t1 - _t0

func __multiply(x, y, n):
	var _t0 = Time.get_ticks_usec()
	for _n in n:
		nd.multiply(x, y, )
	var _t1 = Time.get_ticks_usec()
	return _t1 - _t0

func __divide(x, y, n):
	var _t0 = Time.get_ticks_usec()
	for _n in n:
		nd.divide(x, y, )
	var _t1 = Time.get_ticks_usec()
	return _t1 - _t0

func __pow(x, y, n):
	var _t0 = Time.get_ticks_usec()
	for _n in n:
		nd.pow(x, y, )
	var _t1 = Time.get_ticks_usec()
	return _t1 - _t0

func _ready():
	print("Starting NumDot tests...")
	print(__square(nd.full([50], 0.5, nd.Int8), 800))
	print(__square(nd.full([1000], 0.5, nd.Int8), 40))
	print(__square(nd.full([20000], 0.5, nd.Int8), 2))
	print(__square(nd.full([50], 0.5, nd.UInt8), 800))
	print(__square(nd.full([1000], 0.5, nd.UInt8), 40))
	print(__square(nd.full([20000], 0.5, nd.UInt8), 2))
	print(__square(nd.full([50], 0.5, nd.Int16), 800))
	print(__square(nd.full([1000], 0.5, nd.Int16), 40))
	print(__square(nd.full([20000], 0.5, nd.Int16), 2))
	print(__square(nd.full([50], 0.5, nd.UInt16), 800))
	print(__square(nd.full([1000], 0.5, nd.UInt16), 40))
	print(__square(nd.full([20000], 0.5, nd.UInt16), 2))
	print(__square(nd.full([50], 0.5, nd.Int32), 800))
	print(__square(nd.full([1000], 0.5, nd.Int32), 40))
	print(__square(nd.full([20000], 0.5, nd.Int32), 2))
	print(__square(nd.full([50], 0.5, nd.UInt32), 800))
	print(__square(nd.full([1000], 0.5, nd.UInt32), 40))
	print(__square(nd.full([20000], 0.5, nd.UInt32), 2))
	print(__square(nd.full([50], 0.5, nd.Int64), 800))
	print(__square(nd.full([1000], 0.5, nd.Int64), 40))
	print(__square(nd.full([20000], 0.5, nd.Int64), 2))
	print(__square(nd.full([50], 0.5, nd.UInt64), 800))
	print(__square(nd.full([1000], 0.5, nd.UInt64), 40))
	print(__square(nd.full([20000], 0.5, nd.UInt64), 2))
	print(__square(nd.full([50], 0.5, nd.Int64), 800))
	print(__square(nd.full([1000], 0.5, nd.Int64), 40))
	print(__square(nd.full([20000], 0.5, nd.Int64), 2))
	print(__square(nd.full([50], 0.5, nd.UInt64), 800))
	print(__square(nd.full([1000], 0.5, nd.UInt64), 40))
	print(__square(nd.full([20000], 0.5, nd.UInt64), 2))
	print(__square(nd.full([50], 0.5, nd.Complex64), 800))
	print(__square(nd.full([1000], 0.5, nd.Complex64), 40))
	print(__square(nd.full([20000], 0.5, nd.Complex64), 2))
	print(__square(nd.full([50], 0.5, nd.Complex128), 800))
	print(__square(nd.full([1000], 0.5, nd.Complex128), 40))
	print(__square(nd.full([20000], 0.5, nd.Complex128), 2))
	print(__sqrt(nd.full([50], 0.5, nd.Complex64), 800))
	print(__sqrt(nd.full([1000], 0.5, nd.Complex64), 40))
	print(__sqrt(nd.full([20000], 0.5, nd.Complex64), 2))
	print(__sqrt(nd.full([50], 0.5, nd.Complex128), 800))
	print(__sqrt(nd.full([1000], 0.5, nd.Complex128), 40))
	print(__sqrt(nd.full([20000], 0.5, nd.Complex128), 2))
	print(__abs(nd.full([50], 0.5, nd.Bool), 800))
	print(__abs(nd.full([1000], 0.5, nd.Bool), 40))
	print(__abs(nd.full([20000], 0.5, nd.Bool), 2))
	print(__abs(nd.full([50], 0.5, nd.Int8), 800))
	print(__abs(nd.full([1000], 0.5, nd.Int8), 40))
	print(__abs(nd.full([20000], 0.5, nd.Int8), 2))
	print(__abs(nd.full([50], 0.5, nd.UInt8), 800))
	print(__abs(nd.full([1000], 0.5, nd.UInt8), 40))
	print(__abs(nd.full([20000], 0.5, nd.UInt8), 2))
	print(__abs(nd.full([50], 0.5, nd.Int16), 800))
	print(__abs(nd.full([1000], 0.5, nd.Int16), 40))
	print(__abs(nd.full([20000], 0.5, nd.Int16), 2))
	print(__abs(nd.full([50], 0.5, nd.UInt16), 800))
	print(__abs(nd.full([1000], 0.5, nd.UInt16), 40))
	print(__abs(nd.full([20000], 0.5, nd.UInt16), 2))
	print(__abs(nd.full([50], 0.5, nd.Int32), 800))
	print(__abs(nd.full([1000], 0.5, nd.Int32), 40))
	print(__abs(nd.full([20000], 0.5, nd.Int32), 2))
	print(__abs(nd.full([50], 0.5, nd.UInt32), 800))
	print(__abs(nd.full([1000], 0.5, nd.UInt32), 40))
	print(__abs(nd.full([20000], 0.5, nd.UInt32), 2))
	print(__abs(nd.full([50], 0.5, nd.Int64), 800))
	print(__abs(nd.full([1000], 0.5, nd.Int64), 40))
	print(__abs(nd.full([20000], 0.5, nd.Int64), 2))
	print(__abs(nd.full([50], 0.5, nd.UInt64), 800))
	print(__abs(nd.full([1000], 0.5, nd.UInt64), 40))
	print(__abs(nd.full([20000], 0.5, nd.UInt64), 2))
	print(__abs(nd.full([50], 0.5, nd.Int64), 800))
	print(__abs(nd.full([1000], 0.5, nd.Int64), 40))
	print(__abs(nd.full([20000], 0.5, nd.Int64), 2))
	print(__abs(nd.full([50], 0.5, nd.UInt64), 800))
	print(__abs(nd.full([1000], 0.5, nd.UInt64), 40))
	print(__abs(nd.full([20000], 0.5, nd.UInt64), 2))
	print(__sin(nd.full([50], 0.5, nd.Complex64), 800))
	print(__sin(nd.full([1000], 0.5, nd.Complex64), 40))
	print(__sin(nd.full([20000], 0.5, nd.Complex64), 2))
	print(__sin(nd.full([50], 0.5, nd.Complex128), 800))
	print(__sin(nd.full([1000], 0.5, nd.Complex128), 40))
	print(__sin(nd.full([20000], 0.5, nd.Complex128), 2))
	print(__cos(nd.full([50], 0.5, nd.Complex64), 800))
	print(__cos(nd.full([1000], 0.5, nd.Complex64), 40))
	print(__cos(nd.full([20000], 0.5, nd.Complex64), 2))
	print(__cos(nd.full([50], 0.5, nd.Complex128), 800))
	print(__cos(nd.full([1000], 0.5, nd.Complex128), 40))
	print(__cos(nd.full([20000], 0.5, nd.Complex128), 2))
	print(__tan(nd.full([50], 0.5, nd.Complex64), 800))
	print(__tan(nd.full([1000], 0.5, nd.Complex64), 40))
	print(__tan(nd.full([20000], 0.5, nd.Complex64), 2))
	print(__tan(nd.full([50], 0.5, nd.Complex128), 800))
	print(__tan(nd.full([1000], 0.5, nd.Complex128), 40))
	print(__tan(nd.full([20000], 0.5, nd.Complex128), 2))
	print(__asin(nd.full([50], 0.5, nd.Complex64), 800))
	print(__asin(nd.full([1000], 0.5, nd.Complex64), 40))
	print(__asin(nd.full([20000], 0.5, nd.Complex64), 2))
	print(__asin(nd.full([50], 0.5, nd.Complex128), 800))
	print(__asin(nd.full([1000], 0.5, nd.Complex128), 40))
	print(__asin(nd.full([20000], 0.5, nd.Complex128), 2))
	print(__acos(nd.full([50], 0.5, nd.Complex64), 800))
	print(__acos(nd.full([1000], 0.5, nd.Complex64), 40))
	print(__acos(nd.full([20000], 0.5, nd.Complex64), 2))
	print(__acos(nd.full([50], 0.5, nd.Complex128), 800))
	print(__acos(nd.full([1000], 0.5, nd.Complex128), 40))
	print(__acos(nd.full([20000], 0.5, nd.Complex128), 2))
	print(__atan(nd.full([50], 0.5, nd.Complex64), 800))
	print(__atan(nd.full([1000], 0.5, nd.Complex64), 40))
	print(__atan(nd.full([20000], 0.5, nd.Complex64), 2))
	print(__atan(nd.full([50], 0.5, nd.Complex128), 800))
	print(__atan(nd.full([1000], 0.5, nd.Complex128), 40))
	print(__atan(nd.full([20000], 0.5, nd.Complex128), 2))
	print(__sinh(nd.full([50], 0.5, nd.Complex64), 800))
	print(__sinh(nd.full([1000], 0.5, nd.Complex64), 40))
	print(__sinh(nd.full([20000], 0.5, nd.Complex64), 2))
	print(__sinh(nd.full([50], 0.5, nd.Complex128), 800))
	print(__sinh(nd.full([1000], 0.5, nd.Complex128), 40))
	print(__sinh(nd.full([20000], 0.5, nd.Complex128), 2))
	print(__cosh(nd.full([50], 0.5, nd.Complex64), 800))
	print(__cosh(nd.full([1000], 0.5, nd.Complex64), 40))
	print(__cosh(nd.full([20000], 0.5, nd.Complex64), 2))
	print(__cosh(nd.full([50], 0.5, nd.Complex128), 800))
	print(__cosh(nd.full([1000], 0.5, nd.Complex128), 40))
	print(__cosh(nd.full([20000], 0.5, nd.Complex128), 2))
	print(__tanh(nd.full([50], 0.5, nd.Complex64), 800))
	print(__tanh(nd.full([1000], 0.5, nd.Complex64), 40))
	print(__tanh(nd.full([20000], 0.5, nd.Complex64), 2))
	print(__tanh(nd.full([50], 0.5, nd.Complex128), 800))
	print(__tanh(nd.full([1000], 0.5, nd.Complex128), 40))
	print(__tanh(nd.full([20000], 0.5, nd.Complex128), 2))
	print(__asinh(nd.full([50], 0.5, nd.Complex64), 800))
	print(__asinh(nd.full([1000], 0.5, nd.Complex64), 40))
	print(__asinh(nd.full([20000], 0.5, nd.Complex64), 2))
	print(__asinh(nd.full([50], 0.5, nd.Complex128), 800))
	print(__asinh(nd.full([1000], 0.5, nd.Complex128), 40))
	print(__asinh(nd.full([20000], 0.5, nd.Complex128), 2))
	print(__acosh(nd.full([50], 0.5, nd.Complex64), 800))
	print(__acosh(nd.full([1000], 0.5, nd.Complex64), 40))
	print(__acosh(nd.full([20000], 0.5, nd.Complex64), 2))
	print(__acosh(nd.full([50], 0.5, nd.Complex128), 800))
	print(__acosh(nd.full([1000], 0.5, nd.Complex128), 40))
	print(__acosh(nd.full([20000], 0.5, nd.Complex128), 2))
	print(__atanh(nd.full([50], 0.5, nd.Complex64), 800))
	print(__atanh(nd.full([1000], 0.5, nd.Complex64), 40))
	print(__atanh(nd.full([20000], 0.5, nd.Complex64), 2))
	print(__atanh(nd.full([50], 0.5, nd.Complex128), 800))
	print(__atanh(nd.full([1000], 0.5, nd.Complex128), 40))
	print(__atanh(nd.full([20000], 0.5, nd.Complex128), 2))
	print(__add(nd.full([50], 0.5, nd.Bool), nd.full([50], 0.5, nd.Bool), 800))
	print(__add(nd.full([1000], 0.5, nd.Bool), nd.full([1000], 0.5, nd.Bool), 40))
	print(__add(nd.full([20000], 0.5, nd.Bool), nd.full([20000], 0.5, nd.Bool), 2))
	print(__add(nd.full([50], 0.5, nd.Int8), nd.full([50], 0.5, nd.Int8), 800))
	print(__add(nd.full([1000], 0.5, nd.Int8), nd.full([1000], 0.5, nd.Int8), 40))
	print(__add(nd.full([20000], 0.5, nd.Int8), nd.full([20000], 0.5, nd.Int8), 2))
	print(__add(nd.full([50], 0.5, nd.UInt8), nd.full([50], 0.5, nd.UInt8), 800))
	print(__add(nd.full([1000], 0.5, nd.UInt8), nd.full([1000], 0.5, nd.UInt8), 40))
	print(__add(nd.full([20000], 0.5, nd.UInt8), nd.full([20000], 0.5, nd.UInt8), 2))
	print(__add(nd.full([50], 0.5, nd.Int16), nd.full([50], 0.5, nd.Int16), 800))
	print(__add(nd.full([1000], 0.5, nd.Int16), nd.full([1000], 0.5, nd.Int16), 40))
	print(__add(nd.full([20000], 0.5, nd.Int16), nd.full([20000], 0.5, nd.Int16), 2))
	print(__add(nd.full([50], 0.5, nd.UInt16), nd.full([50], 0.5, nd.UInt16), 800))
	print(__add(nd.full([1000], 0.5, nd.UInt16), nd.full([1000], 0.5, nd.UInt16), 40))
	print(__add(nd.full([20000], 0.5, nd.UInt16), nd.full([20000], 0.5, nd.UInt16), 2))
	print(__add(nd.full([50], 0.5, nd.Int32), nd.full([50], 0.5, nd.Int32), 800))
	print(__add(nd.full([1000], 0.5, nd.Int32), nd.full([1000], 0.5, nd.Int32), 40))
	print(__add(nd.full([20000], 0.5, nd.Int32), nd.full([20000], 0.5, nd.Int32), 2))
	print(__add(nd.full([50], 0.5, nd.UInt32), nd.full([50], 0.5, nd.UInt32), 800))
	print(__add(nd.full([1000], 0.5, nd.UInt32), nd.full([1000], 0.5, nd.UInt32), 40))
	print(__add(nd.full([20000], 0.5, nd.UInt32), nd.full([20000], 0.5, nd.UInt32), 2))
	print(__add(nd.full([50], 0.5, nd.Int64), nd.full([50], 0.5, nd.Int64), 800))
	print(__add(nd.full([1000], 0.5, nd.Int64), nd.full([1000], 0.5, nd.Int64), 40))
	print(__add(nd.full([20000], 0.5, nd.Int64), nd.full([20000], 0.5, nd.Int64), 2))
	print(__add(nd.full([50], 0.5, nd.UInt64), nd.full([50], 0.5, nd.UInt64), 800))
	print(__add(nd.full([1000], 0.5, nd.UInt64), nd.full([1000], 0.5, nd.UInt64), 40))
	print(__add(nd.full([20000], 0.5, nd.UInt64), nd.full([20000], 0.5, nd.UInt64), 2))
	print(__add(nd.full([50], 0.5, nd.Int64), nd.full([50], 0.5, nd.Int64), 800))
	print(__add(nd.full([1000], 0.5, nd.Int64), nd.full([1000], 0.5, nd.Int64), 40))
	print(__add(nd.full([20000], 0.5, nd.Int64), nd.full([20000], 0.5, nd.Int64), 2))
	print(__add(nd.full([50], 0.5, nd.UInt64), nd.full([50], 0.5, nd.UInt64), 800))
	print(__add(nd.full([1000], 0.5, nd.UInt64), nd.full([1000], 0.5, nd.UInt64), 40))
	print(__add(nd.full([20000], 0.5, nd.UInt64), nd.full([20000], 0.5, nd.UInt64), 2))
	print(__add(nd.full([50], 0.5, nd.Complex64), nd.full([50], 0.5, nd.Complex64), 800))
	print(__add(nd.full([1000], 0.5, nd.Complex64), nd.full([1000], 0.5, nd.Complex64), 40))
	print(__add(nd.full([20000], 0.5, nd.Complex64), nd.full([20000], 0.5, nd.Complex64), 2))
	print(__add(nd.full([50], 0.5, nd.Complex128), nd.full([50], 0.5, nd.Complex128), 800))
	print(__add(nd.full([1000], 0.5, nd.Complex128), nd.full([1000], 0.5, nd.Complex128), 40))
	print(__add(nd.full([20000], 0.5, nd.Complex128), nd.full([20000], 0.5, nd.Complex128), 2))
	print(__subtract(nd.full([50], 0.5, nd.Int8), nd.full([50], 0.5, nd.Int8), 800))
	print(__subtract(nd.full([1000], 0.5, nd.Int8), nd.full([1000], 0.5, nd.Int8), 40))
	print(__subtract(nd.full([20000], 0.5, nd.Int8), nd.full([20000], 0.5, nd.Int8), 2))
	print(__subtract(nd.full([50], 0.5, nd.UInt8), nd.full([50], 0.5, nd.UInt8), 800))
	print(__subtract(nd.full([1000], 0.5, nd.UInt8), nd.full([1000], 0.5, nd.UInt8), 40))
	print(__subtract(nd.full([20000], 0.5, nd.UInt8), nd.full([20000], 0.5, nd.UInt8), 2))
	print(__subtract(nd.full([50], 0.5, nd.Int16), nd.full([50], 0.5, nd.Int16), 800))
	print(__subtract(nd.full([1000], 0.5, nd.Int16), nd.full([1000], 0.5, nd.Int16), 40))
	print(__subtract(nd.full([20000], 0.5, nd.Int16), nd.full([20000], 0.5, nd.Int16), 2))
	print(__subtract(nd.full([50], 0.5, nd.UInt16), nd.full([50], 0.5, nd.UInt16), 800))
	print(__subtract(nd.full([1000], 0.5, nd.UInt16), nd.full([1000], 0.5, nd.UInt16), 40))
	print(__subtract(nd.full([20000], 0.5, nd.UInt16), nd.full([20000], 0.5, nd.UInt16), 2))
	print(__subtract(nd.full([50], 0.5, nd.Int32), nd.full([50], 0.5, nd.Int32), 800))
	print(__subtract(nd.full([1000], 0.5, nd.Int32), nd.full([1000], 0.5, nd.Int32), 40))
	print(__subtract(nd.full([20000], 0.5, nd.Int32), nd.full([20000], 0.5, nd.Int32), 2))
	print(__subtract(nd.full([50], 0.5, nd.UInt32), nd.full([50], 0.5, nd.UInt32), 800))
	print(__subtract(nd.full([1000], 0.5, nd.UInt32), nd.full([1000], 0.5, nd.UInt32), 40))
	print(__subtract(nd.full([20000], 0.5, nd.UInt32), nd.full([20000], 0.5, nd.UInt32), 2))
	print(__subtract(nd.full([50], 0.5, nd.Int64), nd.full([50], 0.5, nd.Int64), 800))
	print(__subtract(nd.full([1000], 0.5, nd.Int64), nd.full([1000], 0.5, nd.Int64), 40))
	print(__subtract(nd.full([20000], 0.5, nd.Int64), nd.full([20000], 0.5, nd.Int64), 2))
	print(__subtract(nd.full([50], 0.5, nd.UInt64), nd.full([50], 0.5, nd.UInt64), 800))
	print(__subtract(nd.full([1000], 0.5, nd.UInt64), nd.full([1000], 0.5, nd.UInt64), 40))
	print(__subtract(nd.full([20000], 0.5, nd.UInt64), nd.full([20000], 0.5, nd.UInt64), 2))
	print(__subtract(nd.full([50], 0.5, nd.Int64), nd.full([50], 0.5, nd.Int64), 800))
	print(__subtract(nd.full([1000], 0.5, nd.Int64), nd.full([1000], 0.5, nd.Int64), 40))
	print(__subtract(nd.full([20000], 0.5, nd.Int64), nd.full([20000], 0.5, nd.Int64), 2))
	print(__subtract(nd.full([50], 0.5, nd.UInt64), nd.full([50], 0.5, nd.UInt64), 800))
	print(__subtract(nd.full([1000], 0.5, nd.UInt64), nd.full([1000], 0.5, nd.UInt64), 40))
	print(__subtract(nd.full([20000], 0.5, nd.UInt64), nd.full([20000], 0.5, nd.UInt64), 2))
	print(__subtract(nd.full([50], 0.5, nd.Complex64), nd.full([50], 0.5, nd.Complex64), 800))
	print(__subtract(nd.full([1000], 0.5, nd.Complex64), nd.full([1000], 0.5, nd.Complex64), 40))
	print(__subtract(nd.full([20000], 0.5, nd.Complex64), nd.full([20000], 0.5, nd.Complex64), 2))
	print(__subtract(nd.full([50], 0.5, nd.Complex128), nd.full([50], 0.5, nd.Complex128), 800))
	print(__subtract(nd.full([1000], 0.5, nd.Complex128), nd.full([1000], 0.5, nd.Complex128), 40))
	print(__subtract(nd.full([20000], 0.5, nd.Complex128), nd.full([20000], 0.5, nd.Complex128), 2))
	print(__multiply(nd.full([50], 0.5, nd.Bool), nd.full([50], 0.5, nd.Bool), 800))
	print(__multiply(nd.full([1000], 0.5, nd.Bool), nd.full([1000], 0.5, nd.Bool), 40))
	print(__multiply(nd.full([20000], 0.5, nd.Bool), nd.full([20000], 0.5, nd.Bool), 2))
	print(__multiply(nd.full([50], 0.5, nd.Int8), nd.full([50], 0.5, nd.Int8), 800))
	print(__multiply(nd.full([1000], 0.5, nd.Int8), nd.full([1000], 0.5, nd.Int8), 40))
	print(__multiply(nd.full([20000], 0.5, nd.Int8), nd.full([20000], 0.5, nd.Int8), 2))
	print(__multiply(nd.full([50], 0.5, nd.UInt8), nd.full([50], 0.5, nd.UInt8), 800))
	print(__multiply(nd.full([1000], 0.5, nd.UInt8), nd.full([1000], 0.5, nd.UInt8), 40))
	print(__multiply(nd.full([20000], 0.5, nd.UInt8), nd.full([20000], 0.5, nd.UInt8), 2))
	print(__multiply(nd.full([50], 0.5, nd.Int16), nd.full([50], 0.5, nd.Int16), 800))
	print(__multiply(nd.full([1000], 0.5, nd.Int16), nd.full([1000], 0.5, nd.Int16), 40))
	print(__multiply(nd.full([20000], 0.5, nd.Int16), nd.full([20000], 0.5, nd.Int16), 2))
	print(__multiply(nd.full([50], 0.5, nd.UInt16), nd.full([50], 0.5, nd.UInt16), 800))
	print(__multiply(nd.full([1000], 0.5, nd.UInt16), nd.full([1000], 0.5, nd.UInt16), 40))
	print(__multiply(nd.full([20000], 0.5, nd.UInt16), nd.full([20000], 0.5, nd.UInt16), 2))
	print(__multiply(nd.full([50], 0.5, nd.Int32), nd.full([50], 0.5, nd.Int32), 800))
	print(__multiply(nd.full([1000], 0.5, nd.Int32), nd.full([1000], 0.5, nd.Int32), 40))
	print(__multiply(nd.full([20000], 0.5, nd.Int32), nd.full([20000], 0.5, nd.Int32), 2))
	print(__multiply(nd.full([50], 0.5, nd.UInt32), nd.full([50], 0.5, nd.UInt32), 800))
	print(__multiply(nd.full([1000], 0.5, nd.UInt32), nd.full([1000], 0.5, nd.UInt32), 40))
	print(__multiply(nd.full([20000], 0.5, nd.UInt32), nd.full([20000], 0.5, nd.UInt32), 2))
	print(__multiply(nd.full([50], 0.5, nd.Int64), nd.full([50], 0.5, nd.Int64), 800))
	print(__multiply(nd.full([1000], 0.5, nd.Int64), nd.full([1000], 0.5, nd.Int64), 40))
	print(__multiply(nd.full([20000], 0.5, nd.Int64), nd.full([20000], 0.5, nd.Int64), 2))
	print(__multiply(nd.full([50], 0.5, nd.UInt64), nd.full([50], 0.5, nd.UInt64), 800))
	print(__multiply(nd.full([1000], 0.5, nd.UInt64), nd.full([1000], 0.5, nd.UInt64), 40))
	print(__multiply(nd.full([20000], 0.5, nd.UInt64), nd.full([20000], 0.5, nd.UInt64), 2))
	print(__multiply(nd.full([50], 0.5, nd.Int64), nd.full([50], 0.5, nd.Int64), 800))
	print(__multiply(nd.full([1000], 0.5, nd.Int64), nd.full([1000], 0.5, nd.Int64), 40))
	print(__multiply(nd.full([20000], 0.5, nd.Int64), nd.full([20000], 0.5, nd.Int64), 2))
	print(__multiply(nd.full([50], 0.5, nd.UInt64), nd.full([50], 0.5, nd.UInt64), 800))
	print(__multiply(nd.full([1000], 0.5, nd.UInt64), nd.full([1000], 0.5, nd.UInt64), 40))
	print(__multiply(nd.full([20000], 0.5, nd.UInt64), nd.full([20000], 0.5, nd.UInt64), 2))
	print(__multiply(nd.full([50], 0.5, nd.Complex64), nd.full([50], 0.5, nd.Complex64), 800))
	print(__multiply(nd.full([1000], 0.5, nd.Complex64), nd.full([1000], 0.5, nd.Complex64), 40))
	print(__multiply(nd.full([20000], 0.5, nd.Complex64), nd.full([20000], 0.5, nd.Complex64), 2))
	print(__multiply(nd.full([50], 0.5, nd.Complex128), nd.full([50], 0.5, nd.Complex128), 800))
	print(__multiply(nd.full([1000], 0.5, nd.Complex128), nd.full([1000], 0.5, nd.Complex128), 40))
	print(__multiply(nd.full([20000], 0.5, nd.Complex128), nd.full([20000], 0.5, nd.Complex128), 2))
	print(__divide(nd.full([50], 0.5, nd.Complex64), nd.full([50], 0.5, nd.Complex64), 800))
	print(__divide(nd.full([1000], 0.5, nd.Complex64), nd.full([1000], 0.5, nd.Complex64), 40))
	print(__divide(nd.full([20000], 0.5, nd.Complex64), nd.full([20000], 0.5, nd.Complex64), 2))
	print(__divide(nd.full([50], 0.5, nd.Complex128), nd.full([50], 0.5, nd.Complex128), 800))
	print(__divide(nd.full([1000], 0.5, nd.Complex128), nd.full([1000], 0.5, nd.Complex128), 40))
	print(__divide(nd.full([20000], 0.5, nd.Complex128), nd.full([20000], 0.5, nd.Complex128), 2))
	print(__pow(nd.full([50], 0.5, nd.Int8), nd.full([50], 0.5, nd.Int8), 800))
	print(__pow(nd.full([1000], 0.5, nd.Int8), nd.full([1000], 0.5, nd.Int8), 40))
	print(__pow(nd.full([20000], 0.5, nd.Int8), nd.full([20000], 0.5, nd.Int8), 2))
	print(__pow(nd.full([50], 0.5, nd.UInt8), nd.full([50], 0.5, nd.UInt8), 800))
	print(__pow(nd.full([1000], 0.5, nd.UInt8), nd.full([1000], 0.5, nd.UInt8), 40))
	print(__pow(nd.full([20000], 0.5, nd.UInt8), nd.full([20000], 0.5, nd.UInt8), 2))
	print(__pow(nd.full([50], 0.5, nd.Int16), nd.full([50], 0.5, nd.Int16), 800))
	print(__pow(nd.full([1000], 0.5, nd.Int16), nd.full([1000], 0.5, nd.Int16), 40))
	print(__pow(nd.full([20000], 0.5, nd.Int16), nd.full([20000], 0.5, nd.Int16), 2))
	print(__pow(nd.full([50], 0.5, nd.UInt16), nd.full([50], 0.5, nd.UInt16), 800))
	print(__pow(nd.full([1000], 0.5, nd.UInt16), nd.full([1000], 0.5, nd.UInt16), 40))
	print(__pow(nd.full([20000], 0.5, nd.UInt16), nd.full([20000], 0.5, nd.UInt16), 2))
	print(__pow(nd.full([50], 0.5, nd.Int32), nd.full([50], 0.5, nd.Int32), 800))
	print(__pow(nd.full([1000], 0.5, nd.Int32), nd.full([1000], 0.5, nd.Int32), 40))
	print(__pow(nd.full([20000], 0.5, nd.Int32), nd.full([20000], 0.5, nd.Int32), 2))
	print(__pow(nd.full([50], 0.5, nd.UInt32), nd.full([50], 0.5, nd.UInt32), 800))
	print(__pow(nd.full([1000], 0.5, nd.UInt32), nd.full([1000], 0.5, nd.UInt32), 40))
	print(__pow(nd.full([20000], 0.5, nd.UInt32), nd.full([20000], 0.5, nd.UInt32), 2))
	print(__pow(nd.full([50], 0.5, nd.Int64), nd.full([50], 0.5, nd.Int64), 800))
	print(__pow(nd.full([1000], 0.5, nd.Int64), nd.full([1000], 0.5, nd.Int64), 40))
	print(__pow(nd.full([20000], 0.5, nd.Int64), nd.full([20000], 0.5, nd.Int64), 2))
	print(__pow(nd.full([50], 0.5, nd.UInt64), nd.full([50], 0.5, nd.UInt64), 800))
	print(__pow(nd.full([1000], 0.5, nd.UInt64), nd.full([1000], 0.5, nd.UInt64), 40))
	print(__pow(nd.full([20000], 0.5, nd.UInt64), nd.full([20000], 0.5, nd.UInt64), 2))
	print(__pow(nd.full([50], 0.5, nd.Int64), nd.full([50], 0.5, nd.Int64), 800))
	print(__pow(nd.full([1000], 0.5, nd.Int64), nd.full([1000], 0.5, nd.Int64), 40))
	print(__pow(nd.full([20000], 0.5, nd.Int64), nd.full([20000], 0.5, nd.Int64), 2))
	print(__pow(nd.full([50], 0.5, nd.UInt64), nd.full([50], 0.5, nd.UInt64), 800))
	print(__pow(nd.full([1000], 0.5, nd.UInt64), nd.full([1000], 0.5, nd.UInt64), 40))
	print(__pow(nd.full([20000], 0.5, nd.UInt64), nd.full([20000], 0.5, nd.UInt64), 2))
	print(__pow(nd.full([50], 0.5, nd.Complex64), nd.full([50], 0.5, nd.Complex64), 800))
	print(__pow(nd.full([1000], 0.5, nd.Complex64), nd.full([1000], 0.5, nd.Complex64), 40))
	print(__pow(nd.full([20000], 0.5, nd.Complex64), nd.full([20000], 0.5, nd.Complex64), 2))
	print(__pow(nd.full([50], 0.5, nd.Complex128), nd.full([50], 0.5, nd.Complex128), 800))
	print(__pow(nd.full([1000], 0.5, nd.Complex128), nd.full([1000], 0.5, nd.Complex128), 40))
	print(__pow(nd.full([20000], 0.5, nd.Complex128), nd.full([20000], 0.5, nd.Complex128), 2))
