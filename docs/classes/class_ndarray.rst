:github_url: hide

.. DO NOT EDIT THIS FILE!!!
.. Generated automatically from Godot engine sources.
.. Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.
.. XML source: https://github.com/godotengine/godot/tree/master/godot/numdot/doc_classes/NDArray.xml.

.. _class_NDArray:

NDArray
=======

**Inherits:** 

A NumDot tensor object.

.. rst-class:: classref-introduction-group

Description
-----------

A NumDot tensor object.

.. rst-class:: classref-reftable-group

Methods
-------

.. table::
   :widths: auto

   +-------------------------------+------------------------------------------------------------------------------------------------+
   | ``int``                       | :ref:`array_size_in_bytes<class_NDArray_method_array_size_in_bytes>`\ (\ ) |const|             |
   +-------------------------------+------------------------------------------------------------------------------------------------+
   | ``Variant``                   | :ref:`as_type<class_NDArray_method_as_type>`\ (\ type\: :ref:`DType<enum_nd_DType>`\ ) |const| |
   +-------------------------------+------------------------------------------------------------------------------------------------+
   | :ref:`DType<enum_nd_DType>`   | :ref:`dtype<class_NDArray_method_dtype>`\ (\ ) |const|                                         |
   +-------------------------------+------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>` | :ref:`get<class_NDArray_method_get>`\ (\ ...\ ) |const| |vararg|                               |
   +-------------------------------+------------------------------------------------------------------------------------------------+
   | ``float``                     | :ref:`get_float<class_NDArray_method_get_float>`\ (\ ...\ ) |const| |vararg|                   |
   +-------------------------------+------------------------------------------------------------------------------------------------+
   | ``int``                       | :ref:`get_int<class_NDArray_method_get_int>`\ (\ ...\ ) |const| |vararg|                       |
   +-------------------------------+------------------------------------------------------------------------------------------------+
   | ``int``                       | :ref:`ndim<class_NDArray_method_ndim>`\ (\ ) |const|                                           |
   +-------------------------------+------------------------------------------------------------------------------------------------+
   | |void|                        | :ref:`set<class_NDArray_method_set>`\ (\ ...\ ) |const| |vararg|                               |
   +-------------------------------+------------------------------------------------------------------------------------------------+
   | ``PackedInt64Array``          | :ref:`shape<class_NDArray_method_shape>`\ (\ ) |const|                                         |
   +-------------------------------+------------------------------------------------------------------------------------------------+
   | ``int``                       | :ref:`size<class_NDArray_method_size>`\ (\ ) |const|                                           |
   +-------------------------------+------------------------------------------------------------------------------------------------+
   | ``float``                     | :ref:`to_float<class_NDArray_method_to_float>`\ (\ ) |const|                                   |
   +-------------------------------+------------------------------------------------------------------------------------------------+
   | ``Array``                     | :ref:`to_godot_array<class_NDArray_method_to_godot_array>`\ (\ ) |const|                       |
   +-------------------------------+------------------------------------------------------------------------------------------------+
   | ``int``                       | :ref:`to_int<class_NDArray_method_to_int>`\ (\ ) |const|                                       |
   +-------------------------------+------------------------------------------------------------------------------------------------+
   | ``PackedByteArray``           | :ref:`to_packed_byte_array<class_NDArray_method_to_packed_byte_array>`\ (\ ) |const|           |
   +-------------------------------+------------------------------------------------------------------------------------------------+
   | ``PackedFloat32Array``        | :ref:`to_packed_float32_array<class_NDArray_method_to_packed_float32_array>`\ (\ ) |const|     |
   +-------------------------------+------------------------------------------------------------------------------------------------+
   | ``PackedFloat64Array``        | :ref:`to_packed_float64_array<class_NDArray_method_to_packed_float64_array>`\ (\ ) |const|     |
   +-------------------------------+------------------------------------------------------------------------------------------------+
   | ``PackedInt32Array``          | :ref:`to_packed_int32_array<class_NDArray_method_to_packed_int32_array>`\ (\ ) |const|         |
   +-------------------------------+------------------------------------------------------------------------------------------------+
   | ``PackedInt64Array``          | :ref:`to_packed_int64_array<class_NDArray_method_to_packed_int64_array>`\ (\ ) |const|         |
   +-------------------------------+------------------------------------------------------------------------------------------------+

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Method Descriptions
-------------------

.. _class_NDArray_method_array_size_in_bytes:

.. rst-class:: classref-method

``int`` **array_size_in_bytes**\ (\ ) |const| :ref:`ðŸ”—<class_NDArray_method_array_size_in_bytes>`

Returns the number of bytes used by the contiguous data block of this array.

This is equivalent to nd.size_of_dtype_in_bytes(x.dtype()) \* x.size().

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_as_type:

.. rst-class:: classref-method

``Variant`` **as_type**\ (\ type\: :ref:`DType<enum_nd_DType>`\ ) |const| :ref:`ðŸ”—<class_NDArray_method_as_type>`

Convert to an array of the given type, but avoid copying data if possible.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_dtype:

.. rst-class:: classref-method

:ref:`DType<enum_nd_DType>` **dtype**\ (\ ) |const| :ref:`ðŸ”—<class_NDArray_method_dtype>`

Data-type of the arrayâ€™s elements.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_get:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **get**\ (\ ...\ ) |const| |vararg| :ref:`ðŸ”—<class_NDArray_method_get>`

Indexes into the array, and return the resulting tensor.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_get_float:

.. rst-class:: classref-method

``float`` **get_float**\ (\ ...\ ) |const| |vararg| :ref:`ðŸ”—<class_NDArray_method_get_float>`

Indexes into the array, and return the resulting value as float.

Errors if the index does not yield a single value.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_get_int:

.. rst-class:: classref-method

``int`` **get_int**\ (\ ...\ ) |const| |vararg| :ref:`ðŸ”—<class_NDArray_method_get_int>`

Indexes into the array, and return the resulting value as int.

Errors if the index does not yield a single value.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_ndim:

.. rst-class:: classref-method

``int`` **ndim**\ (\ ) |const| :ref:`ðŸ”—<class_NDArray_method_ndim>`

Number of array dimensions.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_set:

.. rst-class:: classref-method

|void| **set**\ (\ ...\ ) |const| |vararg| :ref:`ðŸ”—<class_NDArray_method_set>`

Indexes into the array, sets the element to the given value.

The value's dimensions must match this array's last dimensions.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_shape:

.. rst-class:: classref-method

``PackedInt64Array`` **shape**\ (\ ) |const| :ref:`ðŸ”—<class_NDArray_method_shape>`

Array of array dimensions.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_size:

.. rst-class:: classref-method

``int`` **size**\ (\ ) |const| :ref:`ðŸ”—<class_NDArray_method_size>`

Number of elements in the array. Equal to nd.prod(a.shape()), i.e., the product of the arrayâ€™s dimensions.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_to_float:

.. rst-class:: classref-method

``float`` **to_float**\ (\ ) |const| :ref:`ðŸ”—<class_NDArray_method_to_float>`

Convert this tensor to a single float.

Errors if size() is not 1.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_to_godot_array:

.. rst-class:: classref-method

``Array`` **to_godot_array**\ (\ ) |const| :ref:`ðŸ”—<class_NDArray_method_to_godot_array>`

Convert this tensor to a Godot array. For now, the resulting array is flat.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_to_int:

.. rst-class:: classref-method

``int`` **to_int**\ (\ ) |const| :ref:`ðŸ”—<class_NDArray_method_to_int>`

Convert this tensor to a single int.

Errors if size() is not 1.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_to_packed_byte_array:

.. rst-class:: classref-method

``PackedByteArray`` **to_packed_byte_array**\ (\ ) |const| :ref:`ðŸ”—<class_NDArray_method_to_packed_byte_array>`

Convert a flat version of this tensor to a PackedByteArray.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_to_packed_float32_array:

.. rst-class:: classref-method

``PackedFloat32Array`` **to_packed_float32_array**\ (\ ) |const| :ref:`ðŸ”—<class_NDArray_method_to_packed_float32_array>`

Convert a flat version of this tensor to a PackedFloat32Array.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_to_packed_float64_array:

.. rst-class:: classref-method

``PackedFloat64Array`` **to_packed_float64_array**\ (\ ) |const| :ref:`ðŸ”—<class_NDArray_method_to_packed_float64_array>`

Convert a flat version of this tensor to a PackedFloat64Array.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_to_packed_int32_array:

.. rst-class:: classref-method

``PackedInt32Array`` **to_packed_int32_array**\ (\ ) |const| :ref:`ðŸ”—<class_NDArray_method_to_packed_int32_array>`

Convert a flat version of this tensor to a PackedInt32Array.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_to_packed_int64_array:

.. rst-class:: classref-method

``PackedInt64Array`` **to_packed_int64_array**\ (\ ) |const| :ref:`ðŸ”—<class_NDArray_method_to_packed_int64_array>`

Convert a flat version of this tensor to a PackedInt64Array.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
.. |constructor| replace:: :abbr:`constructor (This method is used to construct a type.)`
.. |static| replace:: :abbr:`static (This method doesn't need an instance to be called, so it can be called directly using the class name.)`
.. |operator| replace:: :abbr:`operator (This method describes a valid operator to use with this type as left-hand operand.)`
.. |bitfield| replace:: :abbr:`BitField (This value is an integer composed as a bitmask of the following flags.)`
.. |void| replace:: :abbr:`void (No return value.)`
