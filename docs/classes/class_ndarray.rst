:github_url: hide

.. DO NOT EDIT THIS FILE!!!
.. Generated automatically from Godot engine sources.
.. Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.
.. XML source: https://github.com/godotengine/godot/tree/master/godot/NumDot/doc_classes/NDArray.xml.

.. _class_NDArray:

NDArray
=======

**Inherits:** 

A NumDot tensor object.

.. rst-class:: classref-introduction-group

Description
-----------

A NumDot tensor object.

.. rst-class:: classref-reftable-group

Methods
-------

.. table::
   :widths: auto

   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------+
   | ``int``                       | :ref:`array_size_in_bytes<class_NDArray_method_array_size_in_bytes>`\ (\ ) |const|                                                   |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------+
   | ``Variant``                   | :ref:`as_type<class_NDArray_method_as_type>`\ (\ type\: :ref:`DType<enum_nd_DType>`\ ) |const|                                       |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>` | :ref:`assign_abs<class_NDArray_method_assign_abs>`\ (\ a\: ``Variant``\ )                                                            |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>` | :ref:`assign_acos<class_NDArray_method_assign_acos>`\ (\ a\: ``Variant``\ )                                                          |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>` | :ref:`assign_acosh<class_NDArray_method_assign_acosh>`\ (\ a\: ``Variant``\ )                                                        |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>` | :ref:`assign_add<class_NDArray_method_assign_add>`\ (\ a\: ``Variant``, b\: ``Variant``\ )                                           |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>` | :ref:`assign_all<class_NDArray_method_assign_all>`\ (\ a\: ``Variant`` = null, axes\: ``Variant`` = null\ )                          |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>` | :ref:`assign_any<class_NDArray_method_assign_any>`\ (\ a\: ``Variant`` = null, axes\: ``Variant`` = null\ )                          |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>` | :ref:`assign_asin<class_NDArray_method_assign_asin>`\ (\ a\: ``Variant``\ )                                                          |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>` | :ref:`assign_asinh<class_NDArray_method_assign_asinh>`\ (\ a\: ``Variant``\ )                                                        |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>` | :ref:`assign_atan<class_NDArray_method_assign_atan>`\ (\ a\: ``Variant``\ )                                                          |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>` | :ref:`assign_atan2<class_NDArray_method_assign_atan2>`\ (\ x1\: ``Variant``, x2\: ``Variant``\ )                                     |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>` | :ref:`assign_atanh<class_NDArray_method_assign_atanh>`\ (\ a\: ``Variant``\ )                                                        |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>` | :ref:`assign_ceil<class_NDArray_method_assign_ceil>`\ (\ a\: ``Variant``\ )                                                          |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>` | :ref:`assign_cos<class_NDArray_method_assign_cos>`\ (\ a\: ``Variant``\ )                                                            |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>` | :ref:`assign_cosh<class_NDArray_method_assign_cosh>`\ (\ a\: ``Variant``\ )                                                          |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>` | :ref:`assign_deg2rad<class_NDArray_method_assign_deg2rad>`\ (\ a\: ``Variant``\ )                                                    |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>` | :ref:`assign_divide<class_NDArray_method_assign_divide>`\ (\ a\: ``Variant``, b\: ``Variant``\ )                                     |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>` | :ref:`assign_equal<class_NDArray_method_assign_equal>`\ (\ a\: ``Variant``, b\: ``Variant``\ )                                       |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>` | :ref:`assign_exp<class_NDArray_method_assign_exp>`\ (\ a\: ``Variant``\ )                                                            |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>` | :ref:`assign_floor<class_NDArray_method_assign_floor>`\ (\ a\: ``Variant``\ )                                                        |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>` | :ref:`assign_greater<class_NDArray_method_assign_greater>`\ (\ a\: ``Variant``, b\: ``Variant``\ )                                   |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>` | :ref:`assign_greater_equal<class_NDArray_method_assign_greater_equal>`\ (\ a\: ``Variant``, b\: ``Variant``\ )                       |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>` | :ref:`assign_less<class_NDArray_method_assign_less>`\ (\ a\: ``Variant``, b\: ``Variant``\ )                                         |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>` | :ref:`assign_less_equal<class_NDArray_method_assign_less_equal>`\ (\ a\: ``Variant``, b\: ``Variant``\ )                             |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>` | :ref:`assign_log<class_NDArray_method_assign_log>`\ (\ a\: ``Variant``\ )                                                            |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>` | :ref:`assign_logical_and<class_NDArray_method_assign_logical_and>`\ (\ a\: ``Variant``, b\: ``Variant``\ )                           |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>` | :ref:`assign_logical_not<class_NDArray_method_assign_logical_not>`\ (\ a\: ``Variant``\ )                                            |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>` | :ref:`assign_logical_or<class_NDArray_method_assign_logical_or>`\ (\ a\: ``Variant``, b\: ``Variant``\ )                             |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>` | :ref:`assign_logical_xor<class_NDArray_method_assign_logical_xor>`\ (\ a\: ``Variant``, b\: ``Variant``\ )                           |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>` | :ref:`assign_max<class_NDArray_method_assign_max>`\ (\ a\: ``Variant`` = null, axes\: ``Variant`` = null\ )                          |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>` | :ref:`assign_maximum<class_NDArray_method_assign_maximum>`\ (\ a\: ``Variant``, b\: ``Variant``\ )                                   |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>` | :ref:`assign_mean<class_NDArray_method_assign_mean>`\ (\ a\: ``Variant`` = null, axes\: ``Variant`` = null\ )                        |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>` | :ref:`assign_min<class_NDArray_method_assign_min>`\ (\ a\: ``Variant`` = null, axes\: ``Variant`` = null\ )                          |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>` | :ref:`assign_minimum<class_NDArray_method_assign_minimum>`\ (\ a\: ``Variant``, b\: ``Variant``\ )                                   |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>` | :ref:`assign_multiply<class_NDArray_method_assign_multiply>`\ (\ a\: ``Variant``, b\: ``Variant``\ )                                 |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>` | :ref:`assign_norm<class_NDArray_method_assign_norm>`\ (\ a\: ``Variant`` = null, ord\: ``Variant`` = 2, axes\: ``Variant`` = null\ ) |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>` | :ref:`assign_not_equal<class_NDArray_method_assign_not_equal>`\ (\ a\: ``Variant``, b\: ``Variant``\ )                               |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>` | :ref:`assign_pow<class_NDArray_method_assign_pow>`\ (\ a\: ``Variant``, b\: ``Variant``\ )                                           |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>` | :ref:`assign_prod<class_NDArray_method_assign_prod>`\ (\ a\: ``Variant`` = null, axes\: ``Variant`` = null\ )                        |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>` | :ref:`assign_rad2deg<class_NDArray_method_assign_rad2deg>`\ (\ a\: ``Variant``\ )                                                    |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>` | :ref:`assign_remainder<class_NDArray_method_assign_remainder>`\ (\ a\: ``Variant``, b\: ``Variant``\ )                               |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>` | :ref:`assign_rint<class_NDArray_method_assign_rint>`\ (\ a\: ``Variant``\ )                                                          |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>` | :ref:`assign_round<class_NDArray_method_assign_round>`\ (\ a\: ``Variant``\ )                                                        |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>` | :ref:`assign_sign<class_NDArray_method_assign_sign>`\ (\ a\: ``Variant``\ )                                                          |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>` | :ref:`assign_sin<class_NDArray_method_assign_sin>`\ (\ a\: ``Variant``\ )                                                            |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>` | :ref:`assign_sinh<class_NDArray_method_assign_sinh>`\ (\ a\: ``Variant``\ )                                                          |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>` | :ref:`assign_sqrt<class_NDArray_method_assign_sqrt>`\ (\ a\: ``Variant``\ )                                                          |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>` | :ref:`assign_std<class_NDArray_method_assign_std>`\ (\ a\: ``Variant`` = null, axes\: ``Variant`` = null\ )                          |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>` | :ref:`assign_subtract<class_NDArray_method_assign_subtract>`\ (\ a\: ``Variant``, b\: ``Variant``\ )                                 |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>` | :ref:`assign_sum<class_NDArray_method_assign_sum>`\ (\ a\: ``Variant`` = null, axes\: ``Variant`` = null\ )                          |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>` | :ref:`assign_tan<class_NDArray_method_assign_tan>`\ (\ a\: ``Variant``\ )                                                            |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>` | :ref:`assign_tanh<class_NDArray_method_assign_tanh>`\ (\ a\: ``Variant``\ )                                                          |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>` | :ref:`assign_trunc<class_NDArray_method_assign_trunc>`\ (\ a\: ``Variant``\ )                                                        |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>` | :ref:`assign_var<class_NDArray_method_assign_var>`\ (\ a\: ``Variant`` = null, axes\: ``Variant`` = null\ )                          |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`DType<enum_nd_DType>`   | :ref:`dtype<class_NDArray_method_dtype>`\ (\ ) |const|                                                                               |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>` | :ref:`get<class_NDArray_method_get>`\ (\ ...\ ) |const| |vararg|                                                                     |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------+
   | ``float``                     | :ref:`get_float<class_NDArray_method_get_float>`\ (\ ...\ ) |const| |vararg|                                                         |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------+
   | ``int``                       | :ref:`get_int<class_NDArray_method_get_int>`\ (\ ...\ ) |const| |vararg|                                                             |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------+
   | ``int``                       | :ref:`ndim<class_NDArray_method_ndim>`\ (\ ) |const|                                                                                 |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                        | :ref:`set<class_NDArray_method_set>`\ (\ ...\ ) |const| |vararg|                                                                     |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------+
   | ``PackedInt64Array``          | :ref:`shape<class_NDArray_method_shape>`\ (\ ) |const|                                                                               |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------+
   | ``int``                       | :ref:`size<class_NDArray_method_size>`\ (\ ) |const|                                                                                 |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------+
   | ``float``                     | :ref:`to_float<class_NDArray_method_to_float>`\ (\ ) |const|                                                                         |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------+
   | ``Array``                     | :ref:`to_godot_array<class_NDArray_method_to_godot_array>`\ (\ ) |const|                                                             |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------+
   | ``int``                       | :ref:`to_int<class_NDArray_method_to_int>`\ (\ ) |const|                                                                             |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------+
   | ``PackedByteArray``           | :ref:`to_packed_byte_array<class_NDArray_method_to_packed_byte_array>`\ (\ ) |const|                                                 |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------+
   | ``PackedFloat32Array``        | :ref:`to_packed_float32_array<class_NDArray_method_to_packed_float32_array>`\ (\ ) |const|                                           |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------+
   | ``PackedFloat64Array``        | :ref:`to_packed_float64_array<class_NDArray_method_to_packed_float64_array>`\ (\ ) |const|                                           |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------+
   | ``PackedInt32Array``          | :ref:`to_packed_int32_array<class_NDArray_method_to_packed_int32_array>`\ (\ ) |const|                                               |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------+
   | ``PackedInt64Array``          | :ref:`to_packed_int64_array<class_NDArray_method_to_packed_int64_array>`\ (\ ) |const|                                               |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------+

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Method Descriptions
-------------------

.. _class_NDArray_method_array_size_in_bytes:

.. rst-class:: classref-method

``int`` **array_size_in_bytes**\ (\ ) |const| :ref:`🔗<class_NDArray_method_array_size_in_bytes>`

Returns the number of bytes used by the contiguous data block of this array.

This is equivalent to nd.size_of_dtype_in_bytes(x.dtype()) \* x.size().

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_as_type:

.. rst-class:: classref-method

``Variant`` **as_type**\ (\ type\: :ref:`DType<enum_nd_DType>`\ ) |const| :ref:`🔗<class_NDArray_method_as_type>`

Convert to an array of the given type, but avoid copying data if possible.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_assign_abs:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **assign_abs**\ (\ a\: ``Variant``\ ) :ref:`🔗<class_NDArray_method_assign_abs>`

In-place version of nd.abs.

Assigns the result to this array, and returns it. The shape of the result must be broadcastable to this array's shape.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_assign_acos:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **assign_acos**\ (\ a\: ``Variant``\ ) :ref:`🔗<class_NDArray_method_assign_acos>`

In-place version of nd.acos.

Assigns the result to this array, and returns it. The shape of the result must be broadcastable to this array's shape.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_assign_acosh:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **assign_acosh**\ (\ a\: ``Variant``\ ) :ref:`🔗<class_NDArray_method_assign_acosh>`

In-place version of nd.acosh.

Assigns the result to this array, and returns it. The shape of the result must be broadcastable to this array's shape.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_assign_add:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **assign_add**\ (\ a\: ``Variant``, b\: ``Variant``\ ) :ref:`🔗<class_NDArray_method_assign_add>`

In-place version of nd.add.

Assigns the result to this array, and returns it. The shape of the result must be broadcastable to this array's shape.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_assign_all:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **assign_all**\ (\ a\: ``Variant`` = null, axes\: ``Variant`` = null\ ) :ref:`🔗<class_NDArray_method_assign_all>`

.. container:: contribute

	There is currently no description for this method. Please help us by :ref:`contributing one <doc_updating_the_class_reference>`!

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_assign_any:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **assign_any**\ (\ a\: ``Variant`` = null, axes\: ``Variant`` = null\ ) :ref:`🔗<class_NDArray_method_assign_any>`

.. container:: contribute

	There is currently no description for this method. Please help us by :ref:`contributing one <doc_updating_the_class_reference>`!

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_assign_asin:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **assign_asin**\ (\ a\: ``Variant``\ ) :ref:`🔗<class_NDArray_method_assign_asin>`

In-place version of nd.asin.

Assigns the result to this array, and returns it. The shape of the result must be broadcastable to this array's shape.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_assign_asinh:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **assign_asinh**\ (\ a\: ``Variant``\ ) :ref:`🔗<class_NDArray_method_assign_asinh>`

In-place version of nd.asinh.

Assigns the result to this array, and returns it. The shape of the result must be broadcastable to this array's shape.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_assign_atan:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **assign_atan**\ (\ a\: ``Variant``\ ) :ref:`🔗<class_NDArray_method_assign_atan>`

In-place version of nd.atan.

Assigns the result to this array, and returns it. The shape of the result must be broadcastable to this array's shape.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_assign_atan2:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **assign_atan2**\ (\ x1\: ``Variant``, x2\: ``Variant``\ ) :ref:`🔗<class_NDArray_method_assign_atan2>`

In-place version of nd.atan2.

Assigns the result to this array, and returns it. The shape of the result must be broadcastable to this array's shape.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_assign_atanh:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **assign_atanh**\ (\ a\: ``Variant``\ ) :ref:`🔗<class_NDArray_method_assign_atanh>`

In-place version of nd.atanh.

Assigns the result to this array, and returns it. The shape of the result must be broadcastable to this array's shape.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_assign_ceil:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **assign_ceil**\ (\ a\: ``Variant``\ ) :ref:`🔗<class_NDArray_method_assign_ceil>`

In-place version of nd.ceil.

Assigns the result to this array, and returns it. The shape of the result must be broadcastable to this array's shape.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_assign_cos:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **assign_cos**\ (\ a\: ``Variant``\ ) :ref:`🔗<class_NDArray_method_assign_cos>`

In-place version of nd.cos.

Assigns the result to this array, and returns it. The shape of the result must be broadcastable to this array's shape.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_assign_cosh:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **assign_cosh**\ (\ a\: ``Variant``\ ) :ref:`🔗<class_NDArray_method_assign_cosh>`

In-place version of nd.cosh.

Assigns the result to this array, and returns it. The shape of the result must be broadcastable to this array's shape.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_assign_deg2rad:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **assign_deg2rad**\ (\ a\: ``Variant``\ ) :ref:`🔗<class_NDArray_method_assign_deg2rad>`

In-place version of nd.deg2rad.

Assigns the result to this array, and returns it. The shape of the result must be broadcastable to this array's shape.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_assign_divide:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **assign_divide**\ (\ a\: ``Variant``, b\: ``Variant``\ ) :ref:`🔗<class_NDArray_method_assign_divide>`

In-place version of nd.divide.

Assigns the result to this array, and returns it. The shape of the result must be broadcastable to this array's shape.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_assign_equal:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **assign_equal**\ (\ a\: ``Variant``, b\: ``Variant``\ ) :ref:`🔗<class_NDArray_method_assign_equal>`

In-place version of nd.equal.

Assigns the result to this array, and returns it. The shape of the result must be broadcastable to this array's shape.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_assign_exp:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **assign_exp**\ (\ a\: ``Variant``\ ) :ref:`🔗<class_NDArray_method_assign_exp>`

In-place version of nd.exp.

Assigns the result to this array, and returns it. The shape of the result must be broadcastable to this array's shape.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_assign_floor:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **assign_floor**\ (\ a\: ``Variant``\ ) :ref:`🔗<class_NDArray_method_assign_floor>`

In-place version of nd.floor.

Assigns the result to this array, and returns it. The shape of the result must be broadcastable to this array's shape.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_assign_greater:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **assign_greater**\ (\ a\: ``Variant``, b\: ``Variant``\ ) :ref:`🔗<class_NDArray_method_assign_greater>`

In-place version of nd.greater.

Assigns the result to this array, and returns it. The shape of the result must be broadcastable to this array's shape.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_assign_greater_equal:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **assign_greater_equal**\ (\ a\: ``Variant``, b\: ``Variant``\ ) :ref:`🔗<class_NDArray_method_assign_greater_equal>`

In-place version of nd.greater_equal.

Assigns the result to this array, and returns it. The shape of the result must be broadcastable to this array's shape.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_assign_less:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **assign_less**\ (\ a\: ``Variant``, b\: ``Variant``\ ) :ref:`🔗<class_NDArray_method_assign_less>`

In-place version of nd.less.

Assigns the result to this array, and returns it. The shape of the result must be broadcastable to this array's shape.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_assign_less_equal:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **assign_less_equal**\ (\ a\: ``Variant``, b\: ``Variant``\ ) :ref:`🔗<class_NDArray_method_assign_less_equal>`

In-place version of nd.less_equal.

Assigns the result to this array, and returns it. The shape of the result must be broadcastable to this array's shape.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_assign_log:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **assign_log**\ (\ a\: ``Variant``\ ) :ref:`🔗<class_NDArray_method_assign_log>`

In-place version of nd.log.

Assigns the result to this array, and returns it. The shape of the result must be broadcastable to this array's shape.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_assign_logical_and:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **assign_logical_and**\ (\ a\: ``Variant``, b\: ``Variant``\ ) :ref:`🔗<class_NDArray_method_assign_logical_and>`

In-place version of nd.logical_and.

Assigns the result to this array, and returns it. The shape of the result must be broadcastable to this array's shape.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_assign_logical_not:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **assign_logical_not**\ (\ a\: ``Variant``\ ) :ref:`🔗<class_NDArray_method_assign_logical_not>`

In-place version of nd.logical_not.

Assigns the result to this array, and returns it. The shape of the result must be broadcastable to this array's shape.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_assign_logical_or:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **assign_logical_or**\ (\ a\: ``Variant``, b\: ``Variant``\ ) :ref:`🔗<class_NDArray_method_assign_logical_or>`

In-place version of nd.logical_or.

Assigns the result to this array, and returns it. The shape of the result must be broadcastable to this array's shape.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_assign_logical_xor:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **assign_logical_xor**\ (\ a\: ``Variant``, b\: ``Variant``\ ) :ref:`🔗<class_NDArray_method_assign_logical_xor>`

.. container:: contribute

	There is currently no description for this method. Please help us by :ref:`contributing one <doc_updating_the_class_reference>`!

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_assign_max:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **assign_max**\ (\ a\: ``Variant`` = null, axes\: ``Variant`` = null\ ) :ref:`🔗<class_NDArray_method_assign_max>`

In-place version of nd.max.

Assigns the result to this array, and returns it. The shape of the result must be broadcastable to this array's shape.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_assign_maximum:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **assign_maximum**\ (\ a\: ``Variant``, b\: ``Variant``\ ) :ref:`🔗<class_NDArray_method_assign_maximum>`

In-place version of nd.maximum.

Assigns the result to this array, and returns it. The shape of the result must be broadcastable to this array's shape.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_assign_mean:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **assign_mean**\ (\ a\: ``Variant`` = null, axes\: ``Variant`` = null\ ) :ref:`🔗<class_NDArray_method_assign_mean>`

In-place version of nd.mean.

Assigns the result to this array, and returns it. The shape of the result must be broadcastable to this array's shape.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_assign_min:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **assign_min**\ (\ a\: ``Variant`` = null, axes\: ``Variant`` = null\ ) :ref:`🔗<class_NDArray_method_assign_min>`

In-place version of nd.min.

Assigns the result to this array, and returns it. The shape of the result must be broadcastable to this array's shape.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_assign_minimum:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **assign_minimum**\ (\ a\: ``Variant``, b\: ``Variant``\ ) :ref:`🔗<class_NDArray_method_assign_minimum>`

In-place version of nd.minimum.

Assigns the result to this array, and returns it. The shape of the result must be broadcastable to this array's shape.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_assign_multiply:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **assign_multiply**\ (\ a\: ``Variant``, b\: ``Variant``\ ) :ref:`🔗<class_NDArray_method_assign_multiply>`

In-place version of nd.multiply.

Assigns the result to this array, and returns it. The shape of the result must be broadcastable to this array's shape.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_assign_norm:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **assign_norm**\ (\ a\: ``Variant`` = null, ord\: ``Variant`` = 2, axes\: ``Variant`` = null\ ) :ref:`🔗<class_NDArray_method_assign_norm>`

In-place version of nd.norm.

Assigns the result to this array, and returns it. The shape of the result must be broadcastable to this array's shape.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_assign_not_equal:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **assign_not_equal**\ (\ a\: ``Variant``, b\: ``Variant``\ ) :ref:`🔗<class_NDArray_method_assign_not_equal>`

In-place version of nd.not_equal.

Assigns the result to this array, and returns it. The shape of the result must be broadcastable to this array's shape.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_assign_pow:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **assign_pow**\ (\ a\: ``Variant``, b\: ``Variant``\ ) :ref:`🔗<class_NDArray_method_assign_pow>`

In-place version of nd.pow.

Assigns the result to this array, and returns it. The shape of the result must be broadcastable to this array's shape.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_assign_prod:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **assign_prod**\ (\ a\: ``Variant`` = null, axes\: ``Variant`` = null\ ) :ref:`🔗<class_NDArray_method_assign_prod>`

In-place version of nd.prod.

Assigns the result to this array, and returns it. The shape of the result must be broadcastable to this array's shape.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_assign_rad2deg:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **assign_rad2deg**\ (\ a\: ``Variant``\ ) :ref:`🔗<class_NDArray_method_assign_rad2deg>`

In-place version of nd.rad2deg.

Assigns the result to this array, and returns it. The shape of the result must be broadcastable to this array's shape.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_assign_remainder:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **assign_remainder**\ (\ a\: ``Variant``, b\: ``Variant``\ ) :ref:`🔗<class_NDArray_method_assign_remainder>`

In-place version of nd.remainder.

Assigns the result to this array, and returns it. The shape of the result must be broadcastable to this array's shape.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_assign_rint:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **assign_rint**\ (\ a\: ``Variant``\ ) :ref:`🔗<class_NDArray_method_assign_rint>`

In-place version of nd.rint.

Assigns the result to this array, and returns it. The shape of the result must be broadcastable to this array's shape.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_assign_round:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **assign_round**\ (\ a\: ``Variant``\ ) :ref:`🔗<class_NDArray_method_assign_round>`

In-place version of nd.round.

Assigns the result to this array, and returns it. The shape of the result must be broadcastable to this array's shape.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_assign_sign:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **assign_sign**\ (\ a\: ``Variant``\ ) :ref:`🔗<class_NDArray_method_assign_sign>`

In-place version of nd.sign.

Assigns the result to this array, and returns it. The shape of the result must be broadcastable to this array's shape.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_assign_sin:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **assign_sin**\ (\ a\: ``Variant``\ ) :ref:`🔗<class_NDArray_method_assign_sin>`

In-place version of nd.sin.

Assigns the result to this array, and returns it. The shape of the result must be broadcastable to this array's shape.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_assign_sinh:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **assign_sinh**\ (\ a\: ``Variant``\ ) :ref:`🔗<class_NDArray_method_assign_sinh>`

In-place version of nd.sinh.

Assigns the result to this array, and returns it. The shape of the result must be broadcastable to this array's shape.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_assign_sqrt:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **assign_sqrt**\ (\ a\: ``Variant``\ ) :ref:`🔗<class_NDArray_method_assign_sqrt>`

In-place version of nd.sqrt.

Assigns the result to this array, and returns it. The shape of the result must be broadcastable to this array's shape.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_assign_std:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **assign_std**\ (\ a\: ``Variant`` = null, axes\: ``Variant`` = null\ ) :ref:`🔗<class_NDArray_method_assign_std>`

In-place version of nd.std.

Assigns the result to this array, and returns it. The shape of the result must be broadcastable to this array's shape.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_assign_subtract:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **assign_subtract**\ (\ a\: ``Variant``, b\: ``Variant``\ ) :ref:`🔗<class_NDArray_method_assign_subtract>`

In-place version of nd.subtract.

Assigns the result to this array, and returns it. The shape of the result must be broadcastable to this array's shape.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_assign_sum:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **assign_sum**\ (\ a\: ``Variant`` = null, axes\: ``Variant`` = null\ ) :ref:`🔗<class_NDArray_method_assign_sum>`

In-place version of nd.sum.

Assigns the result to this array, and returns it. The shape of the result must be broadcastable to this array's shape.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_assign_tan:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **assign_tan**\ (\ a\: ``Variant``\ ) :ref:`🔗<class_NDArray_method_assign_tan>`

In-place version of nd.tan.

Assigns the result to this array, and returns it. The shape of the result must be broadcastable to this array's shape.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_assign_tanh:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **assign_tanh**\ (\ a\: ``Variant``\ ) :ref:`🔗<class_NDArray_method_assign_tanh>`

In-place version of nd.tanh.

Assigns the result to this array, and returns it. The shape of the result must be broadcastable to this array's shape.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_assign_trunc:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **assign_trunc**\ (\ a\: ``Variant``\ ) :ref:`🔗<class_NDArray_method_assign_trunc>`

In-place version of nd.trunc.

Assigns the result to this array, and returns it. The shape of the result must be broadcastable to this array's shape.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_assign_var:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **assign_var**\ (\ a\: ``Variant`` = null, axes\: ``Variant`` = null\ ) :ref:`🔗<class_NDArray_method_assign_var>`

In-place version of nd.var.

Assigns the result to this array, and returns it. The shape of the result must be broadcastable to this array's shape.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_dtype:

.. rst-class:: classref-method

:ref:`DType<enum_nd_DType>` **dtype**\ (\ ) |const| :ref:`🔗<class_NDArray_method_dtype>`

Data-type of the array’s elements.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_get:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **get**\ (\ ...\ ) |const| |vararg| :ref:`🔗<class_NDArray_method_get>`

Indexes into the array, and return the resulting tensor.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_get_float:

.. rst-class:: classref-method

``float`` **get_float**\ (\ ...\ ) |const| |vararg| :ref:`🔗<class_NDArray_method_get_float>`

Indexes into the array, and return the resulting value as float.

Errors if the index does not yield a single value.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_get_int:

.. rst-class:: classref-method

``int`` **get_int**\ (\ ...\ ) |const| |vararg| :ref:`🔗<class_NDArray_method_get_int>`

Indexes into the array, and return the resulting value as int.

Errors if the index does not yield a single value.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_ndim:

.. rst-class:: classref-method

``int`` **ndim**\ (\ ) |const| :ref:`🔗<class_NDArray_method_ndim>`

Number of array dimensions.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_set:

.. rst-class:: classref-method

|void| **set**\ (\ ...\ ) |const| |vararg| :ref:`🔗<class_NDArray_method_set>`

Indexes into the array, sets the element to the given value.

The value's dimensions must match this array's last dimensions.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_shape:

.. rst-class:: classref-method

``PackedInt64Array`` **shape**\ (\ ) |const| :ref:`🔗<class_NDArray_method_shape>`

Array of array dimensions.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_size:

.. rst-class:: classref-method

``int`` **size**\ (\ ) |const| :ref:`🔗<class_NDArray_method_size>`

Number of elements in the array. Equal to nd.prod(a.shape()), i.e., the product of the array’s dimensions.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_to_float:

.. rst-class:: classref-method

``float`` **to_float**\ (\ ) |const| :ref:`🔗<class_NDArray_method_to_float>`

Convert this tensor to a single float.

Errors if size() is not 1.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_to_godot_array:

.. rst-class:: classref-method

``Array`` **to_godot_array**\ (\ ) |const| :ref:`🔗<class_NDArray_method_to_godot_array>`

Convert this tensor to a Godot array. For now, the resulting array is flat.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_to_int:

.. rst-class:: classref-method

``int`` **to_int**\ (\ ) |const| :ref:`🔗<class_NDArray_method_to_int>`

Convert this tensor to a single int.

Errors if size() is not 1.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_to_packed_byte_array:

.. rst-class:: classref-method

``PackedByteArray`` **to_packed_byte_array**\ (\ ) |const| :ref:`🔗<class_NDArray_method_to_packed_byte_array>`

Convert a flat version of this tensor to a PackedByteArray.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_to_packed_float32_array:

.. rst-class:: classref-method

``PackedFloat32Array`` **to_packed_float32_array**\ (\ ) |const| :ref:`🔗<class_NDArray_method_to_packed_float32_array>`

Convert a flat version of this tensor to a PackedFloat32Array.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_to_packed_float64_array:

.. rst-class:: classref-method

``PackedFloat64Array`` **to_packed_float64_array**\ (\ ) |const| :ref:`🔗<class_NDArray_method_to_packed_float64_array>`

Convert a flat version of this tensor to a PackedFloat64Array.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_to_packed_int32_array:

.. rst-class:: classref-method

``PackedInt32Array`` **to_packed_int32_array**\ (\ ) |const| :ref:`🔗<class_NDArray_method_to_packed_int32_array>`

Convert a flat version of this tensor to a PackedInt32Array.

.. rst-class:: classref-item-separator

----

.. _class_NDArray_method_to_packed_int64_array:

.. rst-class:: classref-method

``PackedInt64Array`` **to_packed_int64_array**\ (\ ) |const| :ref:`🔗<class_NDArray_method_to_packed_int64_array>`

Convert a flat version of this tensor to a PackedInt64Array.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
.. |constructor| replace:: :abbr:`constructor (This method is used to construct a type.)`
.. |static| replace:: :abbr:`static (This method doesn't need an instance to be called, so it can be called directly using the class name.)`
.. |operator| replace:: :abbr:`operator (This method describes a valid operator to use with this type as left-hand operand.)`
.. |bitfield| replace:: :abbr:`BitField (This value is an integer composed as a bitmask of the following flags.)`
.. |void| replace:: :abbr:`void (No return value.)`
