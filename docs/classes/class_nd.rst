:github_url: hide

.. DO NOT EDIT THIS FILE!!!
.. Generated automatically from Godot engine sources.
.. Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.
.. XML source: https://github.com/godotengine/godot/tree/master/godot/numdot/doc_classes/nd.xml.

.. _class_nd:

nd
==

**Inherits:** 

Contains NumDot functions.

.. rst-class:: classref-introduction-group

Description
-----------

The base namespace for NumDot functions.

.. rst-class:: classref-reftable-group

Methods
-------

.. table::
   :widths: auto

   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>` | :ref:`abs<class_nd_method_abs>`\ (\ a\: ``Variant``\ ) |static|                                                                                                                                        |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>` | :ref:`acos<class_nd_method_acos>`\ (\ a\: ``Variant``\ ) |static|                                                                                                                                      |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>` | :ref:`acosh<class_nd_method_acosh>`\ (\ a\: ``Variant``\ ) |static|                                                                                                                                    |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>` | :ref:`add<class_nd_method_add>`\ (\ a\: ``Variant``, b\: ``Variant``\ ) |static|                                                                                                                       |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>` | :ref:`all<class_nd_method_all>`\ (\ a\: ``Variant`` = null, axes\: ``Variant`` = null\ ) |static|                                                                                                      |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>` | :ref:`any<class_nd_method_any>`\ (\ a\: ``Variant`` = null, axes\: ``Variant`` = null\ ) |static|                                                                                                      |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>` | :ref:`arange<class_nd_method_arange>`\ (\ start_or_stop\: ``Variant`` = 0, stop\: ``Variant`` = null, step\: ``Variant`` = 1, dtype\: :ref:`DType<enum_nd_DType>` = 11\ ) |static|                     |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>` | :ref:`array<class_nd_method_array>`\ (\ array\: ``Variant`` = null, dtype\: :ref:`DType<enum_nd_DType>` = 11\ ) |static|                                                                               |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>` | :ref:`as_array<class_nd_method_as_array>`\ (\ array\: ``Variant`` = null, dtype\: :ref:`DType<enum_nd_DType>` = 11\ ) |static|                                                                         |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>` | :ref:`asin<class_nd_method_asin>`\ (\ a\: ``Variant``\ ) |static|                                                                                                                                      |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>` | :ref:`asinh<class_nd_method_asinh>`\ (\ a\: ``Variant``\ ) |static|                                                                                                                                    |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>` | :ref:`atan<class_nd_method_atan>`\ (\ a\: ``Variant``\ ) |static|                                                                                                                                      |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>` | :ref:`atan2<class_nd_method_atan2>`\ (\ x1\: ``Variant``, x2\: ``Variant``\ ) |static|                                                                                                                 |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>` | :ref:`atanh<class_nd_method_atanh>`\ (\ a\: ``Variant``\ ) |static|                                                                                                                                    |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>` | :ref:`ceil<class_nd_method_ceil>`\ (\ a\: ``Variant``\ ) |static|                                                                                                                                      |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>` | :ref:`clip<class_nd_method_clip>`\ (\ a\: ``Variant``, min\: ``Variant``, max\: ``Variant``\ ) |static|                                                                                                |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>` | :ref:`cos<class_nd_method_cos>`\ (\ a\: ``Variant``\ ) |static|                                                                                                                                        |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>` | :ref:`cosh<class_nd_method_cosh>`\ (\ a\: ``Variant``\ ) |static|                                                                                                                                      |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>` | :ref:`deg2rad<class_nd_method_deg2rad>`\ (\ a\: ``Variant``\ ) |static|                                                                                                                                |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>` | :ref:`divide<class_nd_method_divide>`\ (\ a\: ``Variant``, b\: ``Variant``\ ) |static|                                                                                                                 |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>` | :ref:`dot<class_nd_method_dot>`\ (\ a\: ``Variant`` = null, b\: ``Variant`` = null, axes\: ``Variant`` = null\ ) |static|                                                                              |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | ``StringName``                | :ref:`ellipsis<class_nd_method_ellipsis>`\ (\ ) |static|                                                                                                                                               |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>` | :ref:`empty<class_nd_method_empty>`\ (\ shape\: ``Variant`` = null, dtype\: :ref:`DType<enum_nd_DType>` = 2\ ) |static|                                                                                |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>` | :ref:`equal<class_nd_method_equal>`\ (\ a\: ``Variant``, b\: ``Variant``\ ) |static|                                                                                                                   |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>` | :ref:`exp<class_nd_method_exp>`\ (\ a\: ``Variant``\ ) |static|                                                                                                                                        |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>` | :ref:`flip<class_nd_method_flip>`\ (\ v\: ``Variant``, axis\: ``int``\ ) |static|                                                                                                                      |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>` | :ref:`floor<class_nd_method_floor>`\ (\ a\: ``Variant``\ ) |static|                                                                                                                                    |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDRange<class_NDRange>` | :ref:`from<class_nd_method_from>`\ (\ start\: ``int``\ ) |static|                                                                                                                                      |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>` | :ref:`full<class_nd_method_full>`\ (\ shape\: ``Variant`` = null, fill_value\: ``Variant`` = null, dtype\: :ref:`DType<enum_nd_DType>` = 2\ ) |static|                                                 |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>` | :ref:`greater<class_nd_method_greater>`\ (\ a\: ``Variant``, b\: ``Variant``\ ) |static|                                                                                                               |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>` | :ref:`greater_equal<class_nd_method_greater_equal>`\ (\ a\: ``Variant``, b\: ``Variant``\ ) |static|                                                                                                   |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>` | :ref:`less<class_nd_method_less>`\ (\ a\: ``Variant``, b\: ``Variant``\ ) |static|                                                                                                                     |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>` | :ref:`less_equal<class_nd_method_less_equal>`\ (\ a\: ``Variant``, b\: ``Variant``\ ) |static|                                                                                                         |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>` | :ref:`linspace<class_nd_method_linspace>`\ (\ start\: ``Variant`` = 0, stop\: ``Variant`` = null, num\: ``int`` = 50, endpoint\: ``bool`` = true, dtype\: :ref:`DType<enum_nd_DType>` = 11\ ) |static| |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>` | :ref:`log<class_nd_method_log>`\ (\ a\: ``Variant``\ ) |static|                                                                                                                                        |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>` | :ref:`logical_and<class_nd_method_logical_and>`\ (\ a\: ``Variant``, b\: ``Variant``\ ) |static|                                                                                                       |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>` | :ref:`logical_not<class_nd_method_logical_not>`\ (\ a\: ``Variant``\ ) |static|                                                                                                                        |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>` | :ref:`logical_or<class_nd_method_logical_or>`\ (\ a\: ``Variant``, b\: ``Variant``\ ) |static|                                                                                                         |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>` | :ref:`matmul<class_nd_method_matmul>`\ (\ a\: ``Variant``, b\: ``Variant``\ ) |static|                                                                                                                 |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>` | :ref:`max<class_nd_method_max>`\ (\ a\: ``Variant`` = null, axes\: ``Variant`` = null\ ) |static|                                                                                                      |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>` | :ref:`maximum<class_nd_method_maximum>`\ (\ a\: ``Variant``, b\: ``Variant``\ ) |static|                                                                                                               |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>` | :ref:`mean<class_nd_method_mean>`\ (\ a\: ``Variant`` = null, axes\: ``Variant`` = null\ ) |static|                                                                                                    |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>` | :ref:`min<class_nd_method_min>`\ (\ a\: ``Variant`` = null, axes\: ``Variant`` = null\ ) |static|                                                                                                      |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>` | :ref:`minimum<class_nd_method_minimum>`\ (\ a\: ``Variant``, b\: ``Variant``\ ) |static|                                                                                                               |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>` | :ref:`moveaxis<class_nd_method_moveaxis>`\ (\ v\: ``Variant``, src\: ``int``, dst\: ``int``\ ) |static|                                                                                                |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>` | :ref:`multiply<class_nd_method_multiply>`\ (\ a\: ``Variant``, b\: ``Variant``\ ) |static|                                                                                                             |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | ``StringName``                | :ref:`newaxis<class_nd_method_newaxis>`\ (\ ) |static|                                                                                                                                                 |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>` | :ref:`norm<class_nd_method_norm>`\ (\ a\: ``Variant`` = null, ord\: ``Variant`` = 2, axes\: ``Variant`` = null\ ) |static|                                                                             |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>` | :ref:`not_equal<class_nd_method_not_equal>`\ (\ a\: ``Variant``, b\: ``Variant``\ ) |static|                                                                                                           |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>` | :ref:`ones<class_nd_method_ones>`\ (\ shape\: ``Variant`` = null, dtype\: :ref:`DType<enum_nd_DType>` = 2\ ) |static|                                                                                  |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>` | :ref:`pow<class_nd_method_pow>`\ (\ a\: ``Variant``, b\: ``Variant``\ ) |static|                                                                                                                       |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>` | :ref:`prod<class_nd_method_prod>`\ (\ a\: ``Variant`` = null, axes\: ``Variant`` = null\ ) |static|                                                                                                    |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>` | :ref:`rad2deg<class_nd_method_rad2deg>`\ (\ a\: ``Variant``\ ) |static|                                                                                                                                |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDRange<class_NDRange>` | :ref:`range<class_nd_method_range>`\ (\ start_or_stop\: ``Variant`` = 0, stop\: ``Variant`` = null, step\: ``Variant`` = null\ ) |static|                                                              |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>` | :ref:`remainder<class_nd_method_remainder>`\ (\ a\: ``Variant``, b\: ``Variant``\ ) |static|                                                                                                           |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>` | :ref:`reshape<class_nd_method_reshape>`\ (\ a\: ``Variant``, shape\: ``Variant``\ ) |static|                                                                                                           |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>` | :ref:`rint<class_nd_method_rint>`\ (\ a\: ``Variant``\ ) |static|                                                                                                                                      |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>` | :ref:`round<class_nd_method_round>`\ (\ a\: ``Variant``\ ) |static|                                                                                                                                    |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>` | :ref:`sign<class_nd_method_sign>`\ (\ a\: ``Variant``\ ) |static|                                                                                                                                      |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>` | :ref:`sin<class_nd_method_sin>`\ (\ a\: ``Variant``\ ) |static|                                                                                                                                        |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>` | :ref:`sinh<class_nd_method_sinh>`\ (\ a\: ``Variant``\ ) |static|                                                                                                                                      |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | ``int``                       | :ref:`size_of_dtype_in_bytes<class_nd_method_size_of_dtype_in_bytes>`\ (\ dtype\: :ref:`DType<enum_nd_DType>`\ ) |static|                                                                              |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>` | :ref:`sqrt<class_nd_method_sqrt>`\ (\ a\: ``Variant``\ ) |static|                                                                                                                                      |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>` | :ref:`square<class_nd_method_square>`\ (\ a\: ``Variant``\ ) |static|                                                                                                                                  |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>` | :ref:`std<class_nd_method_std>`\ (\ a\: ``Variant`` = null, axes\: ``Variant`` = null\ ) |static|                                                                                                      |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>` | :ref:`subtract<class_nd_method_subtract>`\ (\ a\: ``Variant``, b\: ``Variant``\ ) |static|                                                                                                             |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>` | :ref:`sum<class_nd_method_sum>`\ (\ a\: ``Variant`` = null, axes\: ``Variant`` = null\ ) |static|                                                                                                      |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>` | :ref:`swapaxes<class_nd_method_swapaxes>`\ (\ v\: ``Variant``, a\: ``int``, b\: ``int``\ ) |static|                                                                                                    |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>` | :ref:`tan<class_nd_method_tan>`\ (\ a\: ``Variant``\ ) |static|                                                                                                                                        |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>` | :ref:`tanh<class_nd_method_tanh>`\ (\ a\: ``Variant``\ ) |static|                                                                                                                                      |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDRange<class_NDRange>` | :ref:`to<class_nd_method_to>`\ (\ stop\: ``int``\ ) |static|                                                                                                                                           |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>` | :ref:`transpose<class_nd_method_transpose>`\ (\ a\: ``Variant``, permutation\: ``Variant``\ ) |static|                                                                                                 |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>` | :ref:`trunc<class_nd_method_trunc>`\ (\ a\: ``Variant``\ ) |static|                                                                                                                                    |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>` | :ref:`var<class_nd_method_var>`\ (\ a\: ``Variant`` = null, axes\: ``Variant`` = null\ ) |static|                                                                                                      |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NDArray<class_NDArray>` | :ref:`zeros<class_nd_method_zeros>`\ (\ shape\: ``Variant`` = null, dtype\: :ref:`DType<enum_nd_DType>` = 2\ ) |static|                                                                                |
   +-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Enumerations
------------

.. _enum_nd_DType:

.. rst-class:: classref-enumeration

enum **DType**: :ref:`🔗<enum_nd_DType>`

.. _class_nd_constant_Bool:

.. rst-class:: classref-enumeration-constant

:ref:`DType<enum_nd_DType>` **Bool** = ``0``

Boolean type (true or false), stored as a byte.

.. _class_nd_constant_Float32:

.. rst-class:: classref-enumeration-constant

:ref:`DType<enum_nd_DType>` **Float32** = ``1``

Single-precision (32 bit) floating-point number type.

.. _class_nd_constant_Float64:

.. rst-class:: classref-enumeration-constant

:ref:`DType<enum_nd_DType>` **Float64** = ``2``

Double-precision (64 bit) floating-point number type.

.. _class_nd_constant_Int8:

.. rst-class:: classref-enumeration-constant

:ref:`DType<enum_nd_DType>` **Int8** = ``3``

Signed integer type with 8 bits.

.. _class_nd_constant_Int16:

.. rst-class:: classref-enumeration-constant

:ref:`DType<enum_nd_DType>` **Int16** = ``4``

Signed integer type with 16 bits.

.. _class_nd_constant_Int32:

.. rst-class:: classref-enumeration-constant

:ref:`DType<enum_nd_DType>` **Int32** = ``5``

Signed integer type with 32 bits.

.. _class_nd_constant_Int64:

.. rst-class:: classref-enumeration-constant

:ref:`DType<enum_nd_DType>` **Int64** = ``6``

Signed integer type with 64 bits.

.. _class_nd_constant_UInt8:

.. rst-class:: classref-enumeration-constant

:ref:`DType<enum_nd_DType>` **UInt8** = ``7``

Unsigned integer type with 8 bits. This dtype cannot express negative values.

.. _class_nd_constant_UInt16:

.. rst-class:: classref-enumeration-constant

:ref:`DType<enum_nd_DType>` **UInt16** = ``8``

Unsigned integer type with 16 bits. This dtype cannot express negative values.

.. _class_nd_constant_UInt32:

.. rst-class:: classref-enumeration-constant

:ref:`DType<enum_nd_DType>` **UInt32** = ``9``

Unsigned integer type with 32 bits. This dtype cannot express negative values.

.. _class_nd_constant_UInt64:

.. rst-class:: classref-enumeration-constant

:ref:`DType<enum_nd_DType>` **UInt64** = ``10``

Unsigned integer type with 64 bits. This dtype cannot express negative values.

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Method Descriptions
-------------------

.. _class_nd_method_abs:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **abs**\ (\ a\: ``Variant``\ ) |static| :ref:`🔗<class_nd_method_abs>`

Calculate the absolute value element-wise.

.. rst-class:: classref-item-separator

----

.. _class_nd_method_acos:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **acos**\ (\ a\: ``Variant``\ ) |static| :ref:`🔗<class_nd_method_acos>`

Trigonometric inverse cosine, element-wise.

The inverse of cos so that, if y = cos(x), then x = arccos(y).

.. rst-class:: classref-item-separator

----

.. _class_nd_method_acosh:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **acosh**\ (\ a\: ``Variant``\ ) |static| :ref:`🔗<class_nd_method_acosh>`

Inverse hyperbolic cosine, element-wise.

.. rst-class:: classref-item-separator

----

.. _class_nd_method_add:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **add**\ (\ a\: ``Variant``, b\: ``Variant``\ ) |static| :ref:`🔗<class_nd_method_add>`

Add arguments element-wise.

.. rst-class:: classref-item-separator

----

.. _class_nd_method_all:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **all**\ (\ a\: ``Variant`` = null, axes\: ``Variant`` = null\ ) |static| :ref:`🔗<class_nd_method_all>`

Test whether all array elements along a given axis evaluate to True.

Returns a 0-dimension boolean if axis is null.

.. rst-class:: classref-item-separator

----

.. _class_nd_method_any:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **any**\ (\ a\: ``Variant`` = null, axes\: ``Variant`` = null\ ) |static| :ref:`🔗<class_nd_method_any>`

Test whether any array element along a given axis evaluates to True.

Returns a 0-dimension boolean if axis is null.

.. rst-class:: classref-item-separator

----

.. _class_nd_method_arange:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **arange**\ (\ start_or_stop\: ``Variant`` = 0, stop\: ``Variant`` = null, step\: ``Variant`` = 1, dtype\: :ref:`DType<enum_nd_DType>` = 11\ ) |static| :ref:`🔗<class_nd_method_arange>`

Return evenly spaced values within a given interval.

.. rst-class:: classref-item-separator

----

.. _class_nd_method_array:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **array**\ (\ array\: ``Variant`` = null, dtype\: :ref:`DType<enum_nd_DType>` = 11\ ) |static| :ref:`🔗<class_nd_method_array>`

Copy existing data to a new array.

.. rst-class:: classref-item-separator

----

.. _class_nd_method_as_array:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **as_array**\ (\ array\: ``Variant`` = null, dtype\: :ref:`DType<enum_nd_DType>` = 11\ ) |static| :ref:`🔗<class_nd_method_as_array>`

Convert the input to an array, but avoid copying data if possible.

.. rst-class:: classref-item-separator

----

.. _class_nd_method_asin:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **asin**\ (\ a\: ``Variant``\ ) |static| :ref:`🔗<class_nd_method_asin>`

Inverse sine, element-wise.

The inverse of sine, so that if y = sin(x) then x = arcsin(y).

.. rst-class:: classref-item-separator

----

.. _class_nd_method_asinh:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **asinh**\ (\ a\: ``Variant``\ ) |static| :ref:`🔗<class_nd_method_asinh>`

Inverse hyperbolic sine element-wise.

.. rst-class:: classref-item-separator

----

.. _class_nd_method_atan:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **atan**\ (\ a\: ``Variant``\ ) |static| :ref:`🔗<class_nd_method_atan>`

Trigonometric inverse tangent, element-wise.

The inverse of tan, so that if y = tan(x) then x = arctan(y).

.. rst-class:: classref-item-separator

----

.. _class_nd_method_atan2:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **atan2**\ (\ x1\: ``Variant``, x2\: ``Variant``\ ) |static| :ref:`🔗<class_nd_method_atan2>`

Element-wise arc tangent of x1/x2 choosing the quadrant correctly.

The quadrant (i.e., branch) is chosen so that arctan2(x1, x2) is the signed angle in radians between the ray ending at the origin and passing through the point (1,0), and the ray ending at the origin and passing through the point (x2, x1). (Note the role reversal: the “y-coordinate” is the first function parameter, the “x-coordinate” is the second.) By IEEE convention, this function is defined for x2 = +/-0 and for either or both of x1 and x2 = +/-inf.

.. rst-class:: classref-item-separator

----

.. _class_nd_method_atanh:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **atanh**\ (\ a\: ``Variant``\ ) |static| :ref:`🔗<class_nd_method_atanh>`

Inverse hyperbolic tangent element-wise.

.. rst-class:: classref-item-separator

----

.. _class_nd_method_ceil:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **ceil**\ (\ a\: ``Variant``\ ) |static| :ref:`🔗<class_nd_method_ceil>`

Return the ceiling of the input, element-wise.

The ceil of the scalar x is the smallest integer i, such that i >= x.

.. rst-class:: classref-item-separator

----

.. _class_nd_method_clip:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **clip**\ (\ a\: ``Variant``, min\: ``Variant``, max\: ``Variant``\ ) |static| :ref:`🔗<class_nd_method_clip>`

Clip (limit) the values in an array.

Given an interval, values outside the interval are clipped to the interval edges. For example, if an interval of ``0, 1`` is specified, values smaller than 0 become 0, and values larger than 1 become 1.

Equivalent to but faster than nd.minimum(a_max, nd.maximum(a, a_min)).

No check is performed to ensure a_min < a_max.

.. rst-class:: classref-item-separator

----

.. _class_nd_method_cos:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **cos**\ (\ a\: ``Variant``\ ) |static| :ref:`🔗<class_nd_method_cos>`

Cosine element-wise.

.. rst-class:: classref-item-separator

----

.. _class_nd_method_cosh:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **cosh**\ (\ a\: ``Variant``\ ) |static| :ref:`🔗<class_nd_method_cosh>`

Hyperbolic cosine, element-wise.

Equivalent to 0.5 \* (nd.exp(x) + nd.exp(-x)).

.. rst-class:: classref-item-separator

----

.. _class_nd_method_deg2rad:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **deg2rad**\ (\ a\: ``Variant``\ ) |static| :ref:`🔗<class_nd_method_deg2rad>`

Convert angles from degrees to radians.

.. rst-class:: classref-item-separator

----

.. _class_nd_method_divide:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **divide**\ (\ a\: ``Variant``, b\: ``Variant``\ ) |static| :ref:`🔗<class_nd_method_divide>`

Divide arguments element-wise.

.. rst-class:: classref-item-separator

----

.. _class_nd_method_dot:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **dot**\ (\ a\: ``Variant`` = null, b\: ``Variant`` = null, axes\: ``Variant`` = null\ ) |static| :ref:`🔗<class_nd_method_dot>`

Dot product of two arrays along the given axis.

Equal to nd.sum(nd.multiply(a, b), axes).

.. rst-class:: classref-item-separator

----

.. _class_nd_method_ellipsis:

.. rst-class:: classref-method

``StringName`` **ellipsis**\ (\ ) |static| :ref:`🔗<class_nd_method_ellipsis>`

An alias for the StringName &"...". In a subscript, this will stand in for omitted dimensions, for example if you want to index the last dimension.

.. rst-class:: classref-item-separator

----

.. _class_nd_method_empty:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **empty**\ (\ shape\: ``Variant`` = null, dtype\: :ref:`DType<enum_nd_DType>` = 2\ ) |static| :ref:`🔗<class_nd_method_empty>`

Return a new array of given shape and type, without initializing entries.

.. rst-class:: classref-item-separator

----

.. _class_nd_method_equal:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **equal**\ (\ a\: ``Variant``, b\: ``Variant``\ ) |static| :ref:`🔗<class_nd_method_equal>`

Return (x1 == x2) element-wise.

.. rst-class:: classref-item-separator

----

.. _class_nd_method_exp:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **exp**\ (\ a\: ``Variant``\ ) |static| :ref:`🔗<class_nd_method_exp>`

Calculate the exponential of all elements in the input array.

.. rst-class:: classref-item-separator

----

.. _class_nd_method_flip:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **flip**\ (\ v\: ``Variant``, axis\: ``int``\ ) |static| :ref:`🔗<class_nd_method_flip>`

Reverse the order of elements in an array along the given axis.

The shape of the array is preserved, but the elements are reordered.

.. rst-class:: classref-item-separator

----

.. _class_nd_method_floor:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **floor**\ (\ a\: ``Variant``\ ) |static| :ref:`🔗<class_nd_method_floor>`

Return the floor of the input, element-wise.

The floor of the scalar x is the largest integer i, such that i <= x.

.. rst-class:: classref-item-separator

----

.. _class_nd_method_from:

.. rst-class:: classref-method

:ref:`NDRange<class_NDRange>` **from**\ (\ start\: ``int``\ ) |static| :ref:`🔗<class_nd_method_from>`

Create a range that starts at the given index.

.. rst-class:: classref-item-separator

----

.. _class_nd_method_full:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **full**\ (\ shape\: ``Variant`` = null, fill_value\: ``Variant`` = null, dtype\: :ref:`DType<enum_nd_DType>` = 2\ ) |static| :ref:`🔗<class_nd_method_full>`

Return a new array of given shape and type, filled with fill_value.

.. rst-class:: classref-item-separator

----

.. _class_nd_method_greater:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **greater**\ (\ a\: ``Variant``, b\: ``Variant``\ ) |static| :ref:`🔗<class_nd_method_greater>`

Return (x1 > x2) element-wise.

.. rst-class:: classref-item-separator

----

.. _class_nd_method_greater_equal:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **greater_equal**\ (\ a\: ``Variant``, b\: ``Variant``\ ) |static| :ref:`🔗<class_nd_method_greater_equal>`

Return (x1 >= x2) element-wise.

.. rst-class:: classref-item-separator

----

.. _class_nd_method_less:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **less**\ (\ a\: ``Variant``, b\: ``Variant``\ ) |static| :ref:`🔗<class_nd_method_less>`

Return (x1 < x2) element-wise.

.. rst-class:: classref-item-separator

----

.. _class_nd_method_less_equal:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **less_equal**\ (\ a\: ``Variant``, b\: ``Variant``\ ) |static| :ref:`🔗<class_nd_method_less_equal>`

Return (x1 <= x2) element-wise.

.. rst-class:: classref-item-separator

----

.. _class_nd_method_linspace:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **linspace**\ (\ start\: ``Variant`` = 0, stop\: ``Variant`` = null, num\: ``int`` = 50, endpoint\: ``bool`` = true, dtype\: :ref:`DType<enum_nd_DType>` = 11\ ) |static| :ref:`🔗<class_nd_method_linspace>`

Return evenly spaced numbers over a specified interval.

Returns num evenly spaced samples, calculated over the interval ``start, stop``.

The endpoint of the interval can optionally be excluded.

.. rst-class:: classref-item-separator

----

.. _class_nd_method_log:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **log**\ (\ a\: ``Variant``\ ) |static| :ref:`🔗<class_nd_method_log>`

Natural logarithm, element-wise.

The natural logarithm log is the inverse of the exponential function, so that log(exp(x)) = x. The natural logarithm is logarithm in base e.

.. rst-class:: classref-item-separator

----

.. _class_nd_method_logical_and:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **logical_and**\ (\ a\: ``Variant``, b\: ``Variant``\ ) |static| :ref:`🔗<class_nd_method_logical_and>`

Compute the truth value of x1 AND x2 element-wise.

.. rst-class:: classref-item-separator

----

.. _class_nd_method_logical_not:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **logical_not**\ (\ a\: ``Variant``\ ) |static| :ref:`🔗<class_nd_method_logical_not>`

Compute the truth value of NOT x element-wise.

.. rst-class:: classref-item-separator

----

.. _class_nd_method_logical_or:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **logical_or**\ (\ a\: ``Variant``, b\: ``Variant``\ ) |static| :ref:`🔗<class_nd_method_logical_or>`

Compute the truth value of x1 OR x2 element-wise.

.. rst-class:: classref-item-separator

----

.. _class_nd_method_matmul:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **matmul**\ (\ a\: ``Variant``, b\: ``Variant``\ ) |static| :ref:`🔗<class_nd_method_matmul>`

Matrix multiplication of two arrays.

The behavior depends on the arguments in the following way:

If both arguments are 2-D they are multiplied like conventional matrices.

If either argument is N-D, N > 2, it is treated as a stack of matrices residing in the last two indexes and broadcast accordingly.

.. rst-class:: classref-item-separator

----

.. _class_nd_method_max:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **max**\ (\ a\: ``Variant`` = null, axes\: ``Variant`` = null\ ) |static| :ref:`🔗<class_nd_method_max>`

Return the maximum of an array or maximum along an axis.

.. rst-class:: classref-item-separator

----

.. _class_nd_method_maximum:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **maximum**\ (\ a\: ``Variant``, b\: ``Variant``\ ) |static| :ref:`🔗<class_nd_method_maximum>`

Element-wise maximum of array elements.

Compare two arrays and return a new array containing the element-wise maxima. If one of the elements being compared is a NaN, then that element is returned. If both elements are NaNs then the first is returned. The latter distinction is important for complex NaNs, which are defined as at least one of the real or imaginary parts being a NaN. The net effect is that NaNs are propagated.

.. rst-class:: classref-item-separator

----

.. _class_nd_method_mean:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **mean**\ (\ a\: ``Variant`` = null, axes\: ``Variant`` = null\ ) |static| :ref:`🔗<class_nd_method_mean>`

Compute the arithmetic mean along the specified axis.

Returns the average of the array elements. The average is taken over the flattened array by default, otherwise over the specified axis.

.. rst-class:: classref-item-separator

----

.. _class_nd_method_min:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **min**\ (\ a\: ``Variant`` = null, axes\: ``Variant`` = null\ ) |static| :ref:`🔗<class_nd_method_min>`

Return the minimum of an array or minimum along an axis.

.. rst-class:: classref-item-separator

----

.. _class_nd_method_minimum:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **minimum**\ (\ a\: ``Variant``, b\: ``Variant``\ ) |static| :ref:`🔗<class_nd_method_minimum>`

Element-wise minimum of array elements.

                Compare two arrays and return a new array containing the element-wise minima. If one of the elements being compared is a NaN, then that element is returned. If both elements are NaNs then the first is returned. The latter distinction is important for complex NaNs, which are defined as at least one of the real or imaginary parts being a NaN. The net effect is that NaNs are propagated.

.. rst-class:: classref-item-separator

----

.. _class_nd_method_moveaxis:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **moveaxis**\ (\ v\: ``Variant``, src\: ``int``, dst\: ``int``\ ) |static| :ref:`🔗<class_nd_method_moveaxis>`

Move axes of an array to new positions.

Other axes remain in their original order.

.. rst-class:: classref-item-separator

----

.. _class_nd_method_multiply:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **multiply**\ (\ a\: ``Variant``, b\: ``Variant``\ ) |static| :ref:`🔗<class_nd_method_multiply>`

Multiply arguments element-wise.

.. rst-class:: classref-item-separator

----

.. _class_nd_method_newaxis:

.. rst-class:: classref-method

``StringName`` **newaxis**\ (\ ) |static| :ref:`🔗<class_nd_method_newaxis>`

An alias for the StringName &"newaxis". In a subscript, this will add a dimension of size one.

.. rst-class:: classref-item-separator

----

.. _class_nd_method_norm:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **norm**\ (\ a\: ``Variant`` = null, ord\: ``Variant`` = 2, axes\: ``Variant`` = null\ ) |static| :ref:`🔗<class_nd_method_norm>`

Vector norm.

This function is able to return one of 4 different vector norms, depending on the value of the ord parameter (L0, L1, L2 and LInf).

.. rst-class:: classref-item-separator

----

.. _class_nd_method_not_equal:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **not_equal**\ (\ a\: ``Variant``, b\: ``Variant``\ ) |static| :ref:`🔗<class_nd_method_not_equal>`

Return (x1 != x2) element-wise.

.. rst-class:: classref-item-separator

----

.. _class_nd_method_ones:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **ones**\ (\ shape\: ``Variant`` = null, dtype\: :ref:`DType<enum_nd_DType>` = 2\ ) |static| :ref:`🔗<class_nd_method_ones>`

Return a new array of given shape and type, filled with ones.

.. rst-class:: classref-item-separator

----

.. _class_nd_method_pow:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **pow**\ (\ a\: ``Variant``, b\: ``Variant``\ ) |static| :ref:`🔗<class_nd_method_pow>`

First array elements raised to powers from second array, element-wise.

.. rst-class:: classref-item-separator

----

.. _class_nd_method_prod:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **prod**\ (\ a\: ``Variant`` = null, axes\: ``Variant`` = null\ ) |static| :ref:`🔗<class_nd_method_prod>`

Return the product of array elements over a given axis.

.. rst-class:: classref-item-separator

----

.. _class_nd_method_rad2deg:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **rad2deg**\ (\ a\: ``Variant``\ ) |static| :ref:`🔗<class_nd_method_rad2deg>`

Convert angles from radians to degrees.

.. rst-class:: classref-item-separator

----

.. _class_nd_method_range:

.. rst-class:: classref-method

:ref:`NDRange<class_NDRange>` **range**\ (\ start_or_stop\: ``Variant`` = 0, stop\: ``Variant`` = null, step\: ``Variant`` = null\ ) |static| :ref:`🔗<class_nd_method_range>`

Create a range. arange can be called with a varying number of positional arguments:

arange(stop): Values are generated within the half-open interval [0, stop) (in other words, the interval including start but excluding stop).

arange(start, stop): Values are generated within the half-open interval [start, stop).

arange(start, stop, step) Values are generated within the half-open interval [start, stop), with spacing between values given by step.

.. rst-class:: classref-item-separator

----

.. _class_nd_method_remainder:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **remainder**\ (\ a\: ``Variant``, b\: ``Variant``\ ) |static| :ref:`🔗<class_nd_method_remainder>`

Returns the element-wise remainder of division.

Computes the remainder complementary to the floor_divide function. It is equivalent to the modulus operator x1 % x2 and has the same sign as the divisor x2.

.. rst-class:: classref-item-separator

----

.. _class_nd_method_reshape:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **reshape**\ (\ a\: ``Variant``, shape\: ``Variant``\ ) |static| :ref:`🔗<class_nd_method_reshape>`

Gives a new shape to an array without changing its data.

Up to one element in the new shape can be -1 to infer its size.

.. rst-class:: classref-item-separator

----

.. _class_nd_method_rint:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **rint**\ (\ a\: ``Variant``\ ) |static| :ref:`🔗<class_nd_method_rint>`

Round elements of the array to the nearest integer.

.. rst-class:: classref-item-separator

----

.. _class_nd_method_round:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **round**\ (\ a\: ``Variant``\ ) |static| :ref:`🔗<class_nd_method_round>`

Round elements of the array to the nearest integer.

.. rst-class:: classref-item-separator

----

.. _class_nd_method_sign:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **sign**\ (\ a\: ``Variant``\ ) |static| :ref:`🔗<class_nd_method_sign>`

Returns an element-wise indication of the sign of a number.

The sign function returns -1 if x < 0, 0 if x==0, 1 if x > 0. nan is returned for nan inputs.

.. rst-class:: classref-item-separator

----

.. _class_nd_method_sin:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **sin**\ (\ a\: ``Variant``\ ) |static| :ref:`🔗<class_nd_method_sin>`

Trigonometric sine, element-wise.

.. rst-class:: classref-item-separator

----

.. _class_nd_method_sinh:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **sinh**\ (\ a\: ``Variant``\ ) |static| :ref:`🔗<class_nd_method_sinh>`

Hyperbolic sine, element-wise.

Equivalent to 0.5 \* (nd.exp(x) - nd.exp(-x)).

.. rst-class:: classref-item-separator

----

.. _class_nd_method_size_of_dtype_in_bytes:

.. rst-class:: classref-method

``int`` **size_of_dtype_in_bytes**\ (\ dtype\: :ref:`DType<enum_nd_DType>`\ ) |static| :ref:`🔗<class_nd_method_size_of_dtype_in_bytes>`

Size of a single element of an array using the dtype.

.. rst-class:: classref-item-separator

----

.. _class_nd_method_sqrt:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **sqrt**\ (\ a\: ``Variant``\ ) |static| :ref:`🔗<class_nd_method_sqrt>`

Return the non-negative square-root of an array, element-wise.

.. rst-class:: classref-item-separator

----

.. _class_nd_method_square:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **square**\ (\ a\: ``Variant``\ ) |static| :ref:`🔗<class_nd_method_square>`

Return the element-wise square of the input.

.. rst-class:: classref-item-separator

----

.. _class_nd_method_std:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **std**\ (\ a\: ``Variant`` = null, axes\: ``Variant`` = null\ ) |static| :ref:`🔗<class_nd_method_std>`

Compute the standard deviation along the specified axis.

Returns the standard deviation, a measure of the spread of a distribution, of the array elements. The standard deviation is computed for the flattened array by default, otherwise over the specified axis.

.. rst-class:: classref-item-separator

----

.. _class_nd_method_subtract:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **subtract**\ (\ a\: ``Variant``, b\: ``Variant``\ ) |static| :ref:`🔗<class_nd_method_subtract>`

Subtract arguments, element-wise.

.. rst-class:: classref-item-separator

----

.. _class_nd_method_sum:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **sum**\ (\ a\: ``Variant`` = null, axes\: ``Variant`` = null\ ) |static| :ref:`🔗<class_nd_method_sum>`

Sum of array elements over a given axis.

.. rst-class:: classref-item-separator

----

.. _class_nd_method_swapaxes:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **swapaxes**\ (\ v\: ``Variant``, a\: ``int``, b\: ``int``\ ) |static| :ref:`🔗<class_nd_method_swapaxes>`

Interchange two axes of an array.

.. rst-class:: classref-item-separator

----

.. _class_nd_method_tan:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **tan**\ (\ a\: ``Variant``\ ) |static| :ref:`🔗<class_nd_method_tan>`

Compute tangent element-wise.

Equivalent to nd.sin(x) / nd.cos(x) element-wise.

.. rst-class:: classref-item-separator

----

.. _class_nd_method_tanh:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **tanh**\ (\ a\: ``Variant``\ ) |static| :ref:`🔗<class_nd_method_tanh>`

Compute hyperbolic tangent element-wise.

Equivalent to nd.sinh(x) / nd.cosh(x).

.. rst-class:: classref-item-separator

----

.. _class_nd_method_to:

.. rst-class:: classref-method

:ref:`NDRange<class_NDRange>` **to**\ (\ stop\: ``int``\ ) |static| :ref:`🔗<class_nd_method_to>`

Create a range that starts at 0, and stops at the given index (exclusive).

.. rst-class:: classref-item-separator

----

.. _class_nd_method_transpose:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **transpose**\ (\ a\: ``Variant``, permutation\: ``Variant``\ ) |static| :ref:`🔗<class_nd_method_transpose>`

Returns an array with axes transposed.

.. rst-class:: classref-item-separator

----

.. _class_nd_method_trunc:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **trunc**\ (\ a\: ``Variant``\ ) |static| :ref:`🔗<class_nd_method_trunc>`

Return the truncated value of the input, element-wise.

The truncated value of the scalar x is the nearest integer i which is closer to zero than x is. In short, the fractional part of the signed number x is discarded.

.. rst-class:: classref-item-separator

----

.. _class_nd_method_var:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **var**\ (\ a\: ``Variant`` = null, axes\: ``Variant`` = null\ ) |static| :ref:`🔗<class_nd_method_var>`

Compute the variance along the specified axis.

Returns the variance of the array elements, a measure of the spread of a distribution. The variance is computed for the flattened array by default, otherwise over the specified axis.

.. rst-class:: classref-item-separator

----

.. _class_nd_method_zeros:

.. rst-class:: classref-method

:ref:`NDArray<class_NDArray>` **zeros**\ (\ shape\: ``Variant`` = null, dtype\: :ref:`DType<enum_nd_DType>` = 2\ ) |static| :ref:`🔗<class_nd_method_zeros>`

Return a new array of given shape and type, filled with zeros.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
.. |constructor| replace:: :abbr:`constructor (This method is used to construct a type.)`
.. |static| replace:: :abbr:`static (This method doesn't need an instance to be called, so it can be called directly using the class name.)`
.. |operator| replace:: :abbr:`operator (This method describes a valid operator to use with this type as left-hand operand.)`
.. |bitfield| replace:: :abbr:`BitField (This value is an integer composed as a bitmask of the following flags.)`
.. |void| replace:: :abbr:`void (No return value.)`
